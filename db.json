{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/img/fold.png","path":"img/fold.png","modified":1,"renderable":0},{"_id":"source/img/header.jpg","path":"img/header.jpg","modified":1,"renderable":0},{"_id":"source/img/next.png","path":"img/next.png","modified":1,"renderable":0},{"_id":"source/img/test.png","path":"img/test.png","modified":1,"renderable":0},{"_id":"themes/yilia/source/main.266c1c.css","path":"main.266c1c.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/slider.096dc6.js","path":"slider.096dc6.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.266c1c.js","path":"main.266c1c.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/mobile.906508.js","path":"mobile.906508.js","modified":1,"renderable":1},{"_id":"source/img/back.jpg","path":"img/back.jpg","modified":1,"renderable":0},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"eba9580a5de06172aa3fce650d97d2097b34b340","modified":1501328611000},{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1499483668000},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1499483668000},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1499483668000},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1499483668000},{"_id":"themes/yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1499483668000},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1499483668000},{"_id":"themes/yilia/README.md","hash":"86757b00d393bd4956a252d92a469f11f2ae8914","modified":1499483668000},{"_id":"themes/yilia/_config.yml","hash":"eab50f5e6a7d1de5d601403e93e66392ca3e1a68","modified":1501329265000},{"_id":"themes/yilia/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1499483668000},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1499483668000},{"_id":"source/_drafts/new-draft.md","hash":"61d3c3c29154475c1733f3aa71f3d785115c55f4","modified":1501224414000},{"_id":"source/_posts/.DS_Store","hash":"707852ab2a01c4eb7e76d1d11830716458220c8c","modified":1501403130000},{"_id":"source/_posts/unity_study.md","hash":"ef32b8e6fc841d63ff635a34e70c03698047996c","modified":1501412781000},{"_id":"source/_posts/测试文章.md","hash":"f40b37bd9cd7e15e4f5f464db3a0d20244471ab1","modified":1501323880000},{"_id":"source/_posts/首次使用gitpage.md","hash":"80d36d9f51a27b303ef80ccc1c99be1411cf0cab","modified":1501391359000},{"_id":"source/img/fold.png","hash":"09e81d048d413dcb09d5eb9351552a4aad8bbffe","modified":1501224707000},{"_id":"source/img/header.jpg","hash":"725778ad8f70490d0a03c8f57b6ce8252daa7c31","modified":1501328098000},{"_id":"source/img/next.png","hash":"f90547f08f0fec44e943fa2f69c63bd4ececbba9","modified":1501226291000},{"_id":"source/img/test.png","hash":"a10ea87ffe7d1cd391330adf2c9d7ac7e6f1ffbc","modified":1501246677000},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1499483668000},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1499483668000},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1499483668000},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1499483668000},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1499483668000},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1499483668000},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1499483668000},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1499483668000},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1499483668000},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1499483668000},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1499483668000},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1499483668000},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1499483668000},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1499483668000},{"_id":"themes/yilia/source/main.266c1c.css","hash":"6b9cfabb81f021081a93da5a069674e9be910194","modified":1499483668000},{"_id":"themes/yilia/source/slider.096dc6.js","hash":"a8b66ef85d96616086ea6256e7288d0b5a2df56d","modified":1499483668000},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1499483668000},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1499483668000},{"_id":"themes/yilia/source/main.266c1c.js","hash":"59ccafbd45d28c397a8a901152ef5e196077e4f4","modified":1499483668000},{"_id":"themes/yilia/source/mobile.906508.js","hash":"86e50eecba93644d6cf4f78fd4f9ff54a0ea82d5","modified":1499483668000},{"_id":"source/_posts/unity_study/1491550201008.png","hash":"de04f2d42d39d8c29a36cc25fa66b4e467ead049","modified":1501381320000},{"_id":"source/_posts/unity_study/1491550243585.png","hash":"eba2b07cb50147099076660e6312ee53e6218ada","modified":1501381320000},{"_id":"source/_posts/unity_study/1491552037983.png","hash":"b000ca20cec48143cb7f065413baadb3a69720f3","modified":1501381320000},{"_id":"source/_posts/unity_study/1491552515808.png","hash":"cd17c2563d5a430475635de215ccdce2cb0badad","modified":1501381320000},{"_id":"source/_posts/unity_study/1491553048549.png","hash":"8ab24121ddb6e234a664d8646116211840073018","modified":1501381320000},{"_id":"source/_posts/unity_study/1491553548688.png","hash":"89141888fb968ef221c02d7b09d5acb66fbabb72","modified":1501381320000},{"_id":"source/_posts/unity_study/1491553537327.png","hash":"26c8946af6c7caee01c26b8348246f76a48354a7","modified":1501381320000},{"_id":"source/_posts/unity_study/1491553612376.png","hash":"1dba5a9ff6a3d44f613530513f092a2353447c80","modified":1501381320000},{"_id":"source/_posts/unity_study/1495002356532.png","hash":"7adff9063c0df99372a9bfa5a65a10de3e31252b","modified":1501381320000},{"_id":"source/_posts/unity_study/1495002389507.png","hash":"21b798c09a7105151fa4b5d2f13af0955bda3c62","modified":1501381320000},{"_id":"source/_posts/unity_study/1496577678948.png","hash":"25c098eb6a65483f1a8d513f3377137b7b883766","modified":1501381320000},{"_id":"source/_posts/unity_study/1496577433020.png","hash":"bb751902df9bc6baafa9749c710893fa20736550","modified":1501381320000},{"_id":"source/_posts/unity_study/1496655674282.png","hash":"4aa71687940d3e6d090689f22c301a40a8f4f80b","modified":1501381320000},{"_id":"source/_posts/unity_study/1496663193818.png","hash":"60a45292a7c339b7760e4d311adb9fee2b2810eb","modified":1501381320000},{"_id":"source/_posts/unity_study/1496664667730.png","hash":"70942bf3326e16c1afe0846b4c28821e1b1f2338","modified":1501381320000},{"_id":"source/_posts/unity_study/1496665501144.png","hash":"110334a1800323c3a0ac551f7ff26355955e79fb","modified":1501381320000},{"_id":"source/_posts/unity_study/1497515757683.png","hash":"a53ab7f9d4be3c8bf0611305ca6a382637e4e063","modified":1501381320000},{"_id":"source/_posts/unity_study/1496663793026.png","hash":"2f0fff83c10a5f3092aaca10f14863c2a93da18a","modified":1501381320000},{"_id":"source/_posts/unity_study/1497515795595.png","hash":"512ecbd6bec076e0e3bf21bd2eebaaaf5ce3e2d9","modified":1501381320000},{"_id":"source/_posts/unity_study/1496664752184.png","hash":"5263b922e73c658e616f0dc1c7634ad1b956921e","modified":1501381320000},{"_id":"source/_posts/unity_study/1497516506138.png","hash":"891df67f19ffba5ea41d56379b6bad212a06e56f","modified":1501381320000},{"_id":"source/_posts/unity_study/1497516894694.png","hash":"4b6fa70eeb01fdee991a67b71c6d95ed22f574e6","modified":1501381320000},{"_id":"source/_posts/unity_study/1497531965474.png","hash":"4feaabb97e749b55583def42152a1810922d77b0","modified":1501381320000},{"_id":"source/_posts/unity_study/1497516724024.png","hash":"fea19f55697cbfe9609ae395b93ba1d77edb2f31","modified":1501381320000},{"_id":"source/_posts/unity_study/1497532344804.png","hash":"477306202bf0ee1c2a59203add8818f4991e85e9","modified":1501381320000},{"_id":"source/_posts/unity_study/1497533865288.png","hash":"b4c4117b4d81e703129bc2400c51ee8be094ac6c","modified":1501381320000},{"_id":"source/img/back.jpg","hash":"5eff766f1477d87fd09a4be026a726f044aa631c","modified":1501328867000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"b86b248720ad415ec1b5fee53fb583776c776f83","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"b75e8fff732292fa26b5a0b47cd253d4281e321a","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"9bfcbd9e71401b6da6b2bbbe61e97625ca247b7a","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"2387d91cf94b0b36e8a36841992a5fce63ebd069","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1499483668000},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1499483668000},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1499483668000},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1499483668000},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1499483668000},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1499483668000},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1499483668000},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1499483668000},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1499483668000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1499483668000},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1499483668000},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1499483668000},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1499483668000},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1499483668000},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1499483668000},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1499483668000},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1499483668000},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1499483668000},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"e6e83d4863afcc589d4dd2f327e9f396f7d7b343","modified":1499483668000},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1499483668000},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"97b8fba41c914145710b90091f400b845879577f","modified":1499483668000},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1499483668000},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1499483668000},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1499483668000},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1499483668000},{"_id":"themes/yilia/source-src/css/main.scss","hash":"2f86a014af93583caba78a563d9549826bf28294","modified":1499483668000},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1499483668000},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"ace041d72f95b419f6a5e443191703c2b62007f4","modified":1499483668000},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1499483668000},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1499483668000},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1499483668000},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1499483668000},{"_id":"themes/yilia/source-src/css/social.scss","hash":"724162ccf3977e70a45d189abfaa20b6e2fba87b","modified":1499483668000},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1499483668000},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1499483668000},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"17a97f7c38f5dfacc3eadf354b5826d77f1c2bdb","modified":1499483668000},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1499483668000},{"_id":"themes/yilia/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1499483668000},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1499483668000},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1499483668000},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1499483668000},{"_id":"themes/yilia/source-src/js/fix.js","hash":"9bb1a4918c1b1ee62ce0a71381990a1978c51b2a","modified":1499483668000},{"_id":"themes/yilia/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1499483668000},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1499483668000},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1499483668000},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1499483668000},{"_id":"themes/yilia/source-src/js/slider.js","hash":"3bf0d70ae171404a0dc73c33ec48927fc2521a54","modified":1499483668000},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1499483668000},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"808a2e1ed407984cfdc929b827d3638f70ec9a2a","modified":1499483668000},{"_id":"source/_posts/unity_study/1491553152505.png","hash":"5b2f77e1fbcb53ac8734f0b981000ddeb1299d7f","modified":1501381320000},{"_id":"source/_posts/unity_study/1491555581945.png","hash":"95ff2754637305e94d8d66dc17dd8fc21d6192cd","modified":1501381320000},{"_id":"source/_posts/unity_study/1491877171720.png","hash":"1609d4f23d67381f36967c8e8a9d3366dd5b73b2","modified":1501381320000},{"_id":"source/_posts/unity_study/ply1.gif","hash":"b324f3b0968d9caee42b1015bd14abf384448f46","modified":1501381320000},{"_id":"source/_posts/unity_study/ply2.gif","hash":"a62e4864165d95f5ca463da870479db82751bea5","modified":1501381320000},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"171b130d25c36f496e4b43e3808707a8f1897729","modified":1499483668000},{"_id":"source/_posts/unity_study/1491555636221.png","hash":"02684c52e081ce4d2d0a71aa9ef92145fec059b8","modified":1501381320000},{"_id":"source/_posts/unity_study/1491555622726.png","hash":"8bc6c9aa5f7b587fd13c9509754c4b1652b38883","modified":1501381320000},{"_id":"source/_posts/unity_study/ply3.gif","hash":"aad561e8698c6c3bc21890ef0290d1a282afc6c8","modified":1501381320000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"c2dccf1a95ec09ceeee5004293ac7edb7e1c9a66","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"9f9fa4f8b0de5f87a9494fd0cb5064502a5d5ef5","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"341103df70d0b476e3acd0afbc507a4a120d8f5f","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1499483668000},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1499483668000},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1499483668000},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1499483668000},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1499483668000},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1499483668000},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1499483668000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1499483668000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1499483668000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1499483668000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1499483668000},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1499483668000},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1499483668000},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1499483668000},{"_id":"source/_posts/unity_study/1496583208861.png","hash":"aaede8f8f2b09c999ece09a7163186e3383c0da5","modified":1501381320000},{"_id":"source/_posts/unity_study/1491555497064.png","hash":"db447e3e9024b70b68a362d100a74b13dfce1c57","modified":1501381320000},{"_id":"source/_posts/unity_study/1491555396564.png","hash":"c04612f63512845db6c5bde868074885d12b3f94","modified":1501381320000},{"_id":"source/_posts/unity_study/shader2.gif","hash":"d8842da67740bf52906b1a3c864232e7c9e41296","modified":1501381320000},{"_id":"source/_posts/unity_study/1490002240157.png","hash":"8b890276be767586aad06f8e565e1c769beb0e93","modified":1501381320000},{"_id":"source/_posts/unity_study/1491877201762.png","hash":"ab22382c36a5c2fd5aabf4611f88dab5e974fb39","modified":1501381320000},{"_id":"source/_posts/unity_study/1490002232972.png","hash":"f49fefa703ba118fd3c4a764201824352d1653e9","modified":1501381320000},{"_id":"source/_posts/unity_study/rpg.gif","hash":"8185d0ed3bdaab8c7acb243dae224315f2677ed4","modified":1501381320000},{"_id":"public/2017/07/30/unity_study/index.html","hash":"cc3761676fbaa75faf97283923c6ed2983619f3f","modified":1501412789972},{"_id":"public/2016/08/09/测试文章/index.html","hash":"1ee96c94c3565ac983d7ef9990d6f44dea7015ec","modified":1501412789972},{"_id":"public/2016/08/09/首次使用gitpage/index.html","hash":"f1edecaf5b5f8fe5eda08eb00b8b8278919e7185","modified":1501412789973},{"_id":"public/archives/index.html","hash":"4483ef6a891451a1e20181609cbcbc1304b77c6c","modified":1501412789973},{"_id":"public/archives/2016/index.html","hash":"178411761b4815a701b1e26a8b48151bf30674e3","modified":1501412789973},{"_id":"public/archives/2016/08/index.html","hash":"168bd05dd4de874dc44226e05a1c57d7c7b24276","modified":1501412789973},{"_id":"public/archives/2017/index.html","hash":"de5ec94aadfb81310dea8bc87239c50d191e6a44","modified":1501412789973},{"_id":"public/archives/2017/07/index.html","hash":"36d02499f5fa89408a9c4374848d48bbc7948962","modified":1501412789973},{"_id":"public/index.html","hash":"f958bc24b57331501d0f8a8a7840bb633e358044","modified":1501412789974},{"_id":"public/tags/随笔/index.html","hash":"4ca1bd684f7022ffb1c20df7bc972d5f5f6c8eef","modified":1501412789974},{"_id":"public/img/fold.png","hash":"09e81d048d413dcb09d5eb9351552a4aad8bbffe","modified":1501412789987},{"_id":"public/img/header.jpg","hash":"725778ad8f70490d0a03c8f57b6ce8252daa7c31","modified":1501412789987},{"_id":"public/img/next.png","hash":"f90547f08f0fec44e943fa2f69c63bd4ececbba9","modified":1501412789987},{"_id":"public/img/test.png","hash":"a10ea87ffe7d1cd391330adf2c9d7ac7e6f1ffbc","modified":1501412789987},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1501412789987},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1501412789987},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1501412789987},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1501412789987},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1501412789987},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1501412789987},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1501412789987},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1501412789987},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1501412789987},{"_id":"public/2017/07/30/unity_study/1491550201008.png","hash":"de04f2d42d39d8c29a36cc25fa66b4e467ead049","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1491550243585.png","hash":"eba2b07cb50147099076660e6312ee53e6218ada","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1491552037983.png","hash":"b000ca20cec48143cb7f065413baadb3a69720f3","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1491552515808.png","hash":"cd17c2563d5a430475635de215ccdce2cb0badad","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1491553048549.png","hash":"8ab24121ddb6e234a664d8646116211840073018","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1491553537327.png","hash":"26c8946af6c7caee01c26b8348246f76a48354a7","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1491553548688.png","hash":"89141888fb968ef221c02d7b09d5acb66fbabb72","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1491553612376.png","hash":"1dba5a9ff6a3d44f613530513f092a2353447c80","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1495002356532.png","hash":"7adff9063c0df99372a9bfa5a65a10de3e31252b","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1495002389507.png","hash":"21b798c09a7105151fa4b5d2f13af0955bda3c62","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1496577433020.png","hash":"bb751902df9bc6baafa9749c710893fa20736550","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1496577678948.png","hash":"25c098eb6a65483f1a8d513f3377137b7b883766","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1496655674282.png","hash":"4aa71687940d3e6d090689f22c301a40a8f4f80b","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1496663193818.png","hash":"60a45292a7c339b7760e4d311adb9fee2b2810eb","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1496664667730.png","hash":"70942bf3326e16c1afe0846b4c28821e1b1f2338","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1496663793026.png","hash":"2f0fff83c10a5f3092aaca10f14863c2a93da18a","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1497515757683.png","hash":"a53ab7f9d4be3c8bf0611305ca6a382637e4e063","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1496665501144.png","hash":"110334a1800323c3a0ac551f7ff26355955e79fb","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1496664752184.png","hash":"5263b922e73c658e616f0dc1c7634ad1b956921e","modified":1501412789988},{"_id":"public/2017/07/30/unity_study/1497515795595.png","hash":"512ecbd6bec076e0e3bf21bd2eebaaaf5ce3e2d9","modified":1501412789989},{"_id":"public/2017/07/30/unity_study/1497516506138.png","hash":"891df67f19ffba5ea41d56379b6bad212a06e56f","modified":1501412789989},{"_id":"public/2017/07/30/unity_study/1497516724024.png","hash":"fea19f55697cbfe9609ae395b93ba1d77edb2f31","modified":1501412789989},{"_id":"public/2017/07/30/unity_study/1497516894694.png","hash":"4b6fa70eeb01fdee991a67b71c6d95ed22f574e6","modified":1501412789989},{"_id":"public/2017/07/30/unity_study/1497531965474.png","hash":"4feaabb97e749b55583def42152a1810922d77b0","modified":1501412789989},{"_id":"public/2017/07/30/unity_study/1497532344804.png","hash":"477306202bf0ee1c2a59203add8818f4991e85e9","modified":1501412789989},{"_id":"public/2017/07/30/unity_study/1497533865288.png","hash":"b4c4117b4d81e703129bc2400c51ee8be094ac6c","modified":1501412789989},{"_id":"public/2017/07/30/unity_study/1491553152505.png","hash":"5b2f77e1fbcb53ac8734f0b981000ddeb1299d7f","modified":1501412789997},{"_id":"public/2017/07/30/unity_study/1491555581945.png","hash":"95ff2754637305e94d8d66dc17dd8fc21d6192cd","modified":1501412789999},{"_id":"public/2017/07/30/unity_study/1491877171720.png","hash":"1609d4f23d67381f36967c8e8a9d3366dd5b73b2","modified":1501412789999},{"_id":"public/2017/07/30/unity_study/ply1.gif","hash":"b324f3b0968d9caee42b1015bd14abf384448f46","modified":1501412789999},{"_id":"public/2017/07/30/unity_study/ply2.gif","hash":"a62e4864165d95f5ca463da870479db82751bea5","modified":1501412789999},{"_id":"public/slider.096dc6.js","hash":"a8b66ef85d96616086ea6256e7288d0b5a2df56d","modified":1501412790003},{"_id":"public/main.266c1c.js","hash":"59ccafbd45d28c397a8a901152ef5e196077e4f4","modified":1501412790003},{"_id":"public/mobile.906508.js","hash":"86e50eecba93644d6cf4f78fd4f9ff54a0ea82d5","modified":1501412790003},{"_id":"public/main.266c1c.css","hash":"6b9cfabb81f021081a93da5a069674e9be910194","modified":1501412790004},{"_id":"public/img/back.jpg","hash":"5eff766f1477d87fd09a4be026a726f044aa631c","modified":1501412790004},{"_id":"public/2017/07/30/unity_study/1491555636221.png","hash":"02684c52e081ce4d2d0a71aa9ef92145fec059b8","modified":1501412790004},{"_id":"public/2017/07/30/unity_study/1491555622726.png","hash":"8bc6c9aa5f7b587fd13c9509754c4b1652b38883","modified":1501412790004},{"_id":"public/2017/07/30/unity_study/ply3.gif","hash":"aad561e8698c6c3bc21890ef0290d1a282afc6c8","modified":1501412790004},{"_id":"public/2017/07/30/unity_study/1496583208861.png","hash":"aaede8f8f2b09c999ece09a7163186e3383c0da5","modified":1501412790008},{"_id":"public/2017/07/30/unity_study/1491555497064.png","hash":"db447e3e9024b70b68a362d100a74b13dfce1c57","modified":1501412790012},{"_id":"public/2017/07/30/unity_study/1491555396564.png","hash":"c04612f63512845db6c5bde868074885d12b3f94","modified":1501412790015},{"_id":"public/2017/07/30/unity_study/shader2.gif","hash":"d8842da67740bf52906b1a3c864232e7c9e41296","modified":1501412790034},{"_id":"public/2017/07/30/unity_study/1490002240157.png","hash":"8b890276be767586aad06f8e565e1c769beb0e93","modified":1501412790040},{"_id":"public/2017/07/30/unity_study/1491877201762.png","hash":"ab22382c36a5c2fd5aabf4611f88dab5e974fb39","modified":1501412790042},{"_id":"public/2017/07/30/unity_study/1490002232972.png","hash":"f49fefa703ba118fd3c4a764201824352d1653e9","modified":1501412790046},{"_id":"public/2017/07/30/unity_study/rpg.gif","hash":"8185d0ed3bdaab8c7acb243dae224315f2677ed4","modified":1501412790046}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"new draft","_content":"私密","source":"_drafts/new-draft.md","raw":"---\ntitle: new draft\ntags:\n---\n私密","slug":"new-draft","published":0,"date":"2017-07-28T06:45:37.000Z","updated":"2017-07-28T06:46:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5qmeqdy0000efmhmecgvvs3","content":"<p>私密</p>\n","excerpt":"","more":"<p>私密</p>\n"},{"title":"Unity安装->入门->工程学习->shader","date":"2017-07-30T04:49:39.000Z","_content":"\n\n\n## 总体的思维导图\n通过下面一张图，大概的知道一个学习的方向和流程。对于这篇文章讲的是第一个部分，入门，初次接触unity。\n![Alt text](./1496577433020.png)\n\n<!-- more -->\n\n\n\n## 一、安装\n#### 1、安装教程（windows）\nmac就比较简单 官网下载dmg就可以安装使用了\n我用下面图中的两个文件完成安装，一个是安装文件（4.7），一个是破解，然后根据下面链接完成安装\n![Alt text](./1496577678948.png)\n\nhttp://jingyan.baidu.com/article/90895e0f959c7564ec6b0bfb.html\n\n#### 2、需要的文件（百度网盘分享）\n\nhttp://pan.baidu.com/s/1slFHeFz\n\n- 分享的文件里的东西有：\n\t- 【安装使用】：Unity 4.7.1安装文件\n\t- 【安装使用】：Unity 4.x pro Patch.exe\n\t- 【入门使用】：《unity4.x从入门到精通》\n\t- 【入门使用】：简单的工程（微信飞机游戏）：\n\t- 【进一步了解使用】：RPG游戏的简单的工程\n\t- 【shader学习使用】：《Unity Shader入门精要》\n\t- \n#### 3、安装结果\n使用a.Unity 4.7.1安装文件 b.Unity 4.x pro Patch.exe  然后用上上面的教程链接就可以完成windows unity的安装  打开如下：\n![Alt text](./1496583208861.png)\n\n\n\n## 二、入门学习：\n#### 1、开始我找了本书看《unity4.x从入门到精通》：\n《unity4.x从入门到精通》\nhttp://pan.baidu.com/s/1slFHeFz\n\n#### 2、《unity4.x从入门到精通》读书的记录：\n##### 第一章 （可跳过）\n第一章 没什么干货 可以直接跳过\n\n##### 第二章  （重点看2.1  2.2+实操一下）\n- 刚接触的unity的可以按照第二章说的去操作一下  感受一下unity的一些功能 想贪快的就看**2.1** 、**2.2**部分即可 后面的用到再查阅\n- 快捷键部分 等到基本入门了 再来看一遍 会比较受用的感觉  \n\n##### 第三章 （粗略看）\n- 第三章看下 不用纠那么细致 \n##### 第四章 （重点看+操作）\n- 第四章书讲的是怎么写代码的 看完第四章就会输出hello world\n##### 截取两张图\n![Alt text](./1490002232972.png)\n![Alt text](./1490002240157.png)\n\n\n\n##### 后面5-17章的当作工具书看\n\n12章 到16  是针对开发的介绍\n\n17章 进阶 ： 网络\n\n\n#### 3、大致的浏览了《unity4.x从入门到精通》 前四章之后带着几个疑问去分类学习：\n##### 3.1、C#代码跟unity怎么关联起来？  书中13章![Alt text](./1491552037983.png)\n###### 1、C#脚本的规则\n（1）凡事需要添加到游戏对象的C#脚本类都是需要直接或者间接的继承 MonoBehaviour 如果在unity添加脚本 unity会自动填充继承MonoBehaviour的代码  如果是自己新建一个文件 然后在unity从拖拽添加component 这样是不会成功的（后面会说unity怎么添加C#文件）\n\n（2）继承了MonoBehaviour的类 都会有Start 和 Awake函数的继承  一般使用Start和Awake来初始化  不使用构造函数的原因是unity中无法确定构造函数的顺序。这里我觉得有个原因是：unity会把所有绑定在对象身上的类实例化  然后才可以GetComponent()  例如：下面的操作如果在构造函数中做 可能PlayerAttack这个没有实例化 那么获取不到  所以把初始化工作放在Start中\n![Alt text](./1491552515808.png)\n\n（3）类名和脚本文件名相同 \n\n（4）协同函数Coroutines 返回类型必须是Ienumerator\n\n（5）C#不支持自定义命名空间\n\n###### 2、C#脚本在unity编辑器中关联对象（十三章有详细介绍）\n1、创建脚本的方法：\n![Alt text](./1491553048549.png)\n\n2、创建完之后的编辑：\n这里可以修改用MonoDevelop的编辑器 或者用Vs2012作为代码编辑\n![Alt text](./1491553152505.png)\n\n3、关联到对象去\n（3.1）添加一个gameobject \n![Alt text](./1491553612376.png)\n（3.2） 然后给gameObject添加脚本\n![Alt text](./1491553537327.png)![Alt text](./1491553548688.png)\n\n在Unity中，继承MonoBehaviour的C#脚本都被看作一个Component 游戏对象可以理解为一个容纳各种类型component的容器 游戏对象的所有component一起决定了这个对象的行为表现 这个对象被添加到scene中之后 然后点击build and run 之后这个脚本的Start函数就会被调用一起  可以在这里输出 hello world  这就算是unity的hello world\n\n\n###### 3、怎么获取别的对象以及他的component\n使用函数 GameObject.Find  null则是找不到  根据类名\n使用函数GameObject.FindWithTag\n还有在unity编辑器中拖拽\n\n查看数组的表13-6 表13-7  表13-8  表13-9 \n\n![Alt text](./1491555497064.png)\n![Alt text](./1491555396564.png)\n![Alt text](./1491555581945.png)\n![Alt text](./1491555622726.png)\n![Alt text](./1491555636221.png)\n\n\n\n## 三、工程学习：\n看了《unity4.x从入门到精通》 简单操作unity之后 我上网找几个简单的游戏demo来看下，这样我觉得会比较快上手。\n### 1、微信飞机大战\n工程下载地址：\nhttp://pan.baidu.com/s/1slFHeFz （网上找的工程）\n这个比较容易看懂   \n\n下面说明的过程：\n（1）背景移动 -->（2）敌机出生-->（3）自己的飞行\n![背景移动](./ply1.gif)==》 ![敌机出生](./ply2.gif)==》 ![自己的飞行](./ply3.gif)\n\n\n\n\n\n#### 1、初看这个工程\n只有一个场景scene\n![Alt text](./1496655674282.png)\n预制体有这些\n![Alt text](./1496663793026.png)\n脚本是这些\n![Alt text](./1496663193818.png)\n#### 2、分几个部分看\n##### 2.1、scene\n![Alt text](./1496664667730.png)\n1.里面有个 Main Camera 点击它然后看导航栏Inspector\n2.Main Camera里面有一些component组件 其中Camera 去修改size view port然后运行看下结果 \n![Alt text](./1496664752184.png)\n3.除了Main Camera 这个Scene里面还有一些飞机（hero） 背景（bg） 还一些不是UI的东西（bombManager）\n\n上面大概的了解到，在这个Scene里面拖拽了一些物件 还有一个摄像机 把这些物件投影到屏幕中，到目前为止，我们大概知道是怎么得到游戏的静态界面的，但是游戏是怎么动起来的还不知道。接下来脚本就是讲怎么动起来的。\n\n\n##### 2.2、脚本\n1. 代码入口，没有一个明确的Main函数入口  \n下面按照顺序说下（1）背景移动 （2）怎么生成敌机  （3）怎么控制自己的战机\n![Alt text](./1496665501144.png)\n（1）背景移动 \nscene里面有个object叫bg 然后再点击其中一个background查看导航栏 \n可以看到每个background都挂在了一个脚本组件 BackgroundTransform.cs  这个脚本就是控制不背景移动的\n![Alt text](./1497515757683.png)\n![Alt text](./1497515795595.png)\n\n看到BackgroundTransform这个脚本 两个背景来控制屏幕的背景交替向下移动\n```\npublic class BackgroundTransform : MonoBehaviour {\n\tpublic static float moveSpeed = 2f;\n\t\n\t// Update is called once per frame\n\tvoid Update () {\n\t\tthis.transform.Translate( Vector3.down * moveSpeed * Time.deltaTime );\n\t\tVector3 postion = this.transform.position;\n\t\tif(postion.y<=-8.52f){\n\t\t\t//有两个背景在交替滚动  如果有一个滚动到屏幕外面则改动显示\n\t\t\tthis.transform.position = new Vector3(postion.x,postion.y+8.52f*2,postion.z );\n\t\t}\n\t}\n}\n```\n\n（2）怎么生成敌机\nscene里面有个叫spawn的东西  这个spawn十个空object 里面挂了一个spawn.cs脚本组件\n![Alt text](./1497516506138.png)\n【代码如下】：\n![Alt text](./1497516724024.png)\n\n\n地机的行为就看模型上面挂的脚本组件Enemy.cs\n\n\n（3）怎么控制自己的战机\n同样的在hero这个上面挂了Hero.cs的脚本组件  然后具体就看里面的代码\n![Alt text](./1497516894694.png)\n\n\n\n\n### 2、RPG游戏\n然后再找个复杂点的游戏工程来看\n#### 1、初看工程 \n- 工程下载地址：\nhttp://pan.baidu.com/s/1slFHeFz（网上找的工程）\n- 工程的脚本目录\n![Alt text](./1491550201008.png)\n\n#### 2、工程代码查看\n**看下怎么把这个人物控制方向运动起来的**\n![Alt text](./rpg.gif)\n\n1.打开03_play这个scene 然后拖拽一个Magician模型到scene中\n先在Prefabs文件夹中找到Magician看模型有什么挂件\n- Magician挂了Character Controller这个控制组件\n这个是角色控制器 可以对角色做移动的操作 在playermove脚本里面用到\n\n- Magician还挂了PlayerDir PlayerMove  PlayerAnimation PlayerState PlayerAttack等脚本来实现模型的行为\n看下PlayerMove的update函数\n![Alt text](./1491550243585.png)\n这里判断如果距离大于0.3f则会移动\n\n\n从Magician引发的问题：\n\n##### 2.1、移动的时候有个targetPosition 这个是怎么来的？\ntargetPosition 是PlayerDir.cs这个里面的成员\nPlayerDir.cs里面会计算鼠标点击屏幕的位置发出的射线的碰撞结果 如果是地面那么修改这个玩家的朝向 \n![Alt text](./1497532344804.png)\n\n\n##### 2.2、又引发一个问题鼠标怎么会变样？\n我们看到03_play这个scene有个object叫GameSetting 这个是一个纯粹为了挂脚本用的object \n![Alt text](./1497531965474.png)\n我们看到这个CursorManager就是我们在游戏中的鼠标的管理类\n\n##### 2.3、模型怎么会动起来呢？\n打开03_play这个scene 然后拖拽一个Magician模型到scene中 然后在菜单栏window animation打开animation窗口 然后可以选择已经做好的动作 attack1 然后点击播放 现在我们知道动作可以预先做好 然后再代码中调用 我们看下代码是怎么调用的 \n![Alt text](./1497533865288.png)\nPlayerAnimation.cs这个脚本 根据一个状态去 播放动画animation.CrossFade(animName);\n\n```\n// Update is called once per frame\n\tvoid LateUpdate () {\n        if (attack.state == PlayerState.ControlWalk) {\n            if (move.state == ControlWalkState.Moving) {\n                PlayAnim(\"Run\");\n            } else if (move.state == ControlWalkState.Idle) {\n                PlayAnim(\"Idle\");\n            }\n        } else if (attack.state == PlayerState.NormalAttack) {\n            if (attack.attack_state == AttackState.Moving) {\n                PlayAnim(\"Run\");\n            }\n        }\n\t}\n\tvoid PlayAnim(string animName) {\n        animation.CrossFade(animName);\n    }\n```\n\n这个项目的运行\n![Alt text](./1491877171720.png)\n![Alt text](./1491877201762.png)\n\n之后看下怎么改改这个项目  不懂的再google 或者再去细看unity的一些用法 或则C#的用法\n\n\n\n## 四、Unity Shader学习\n\n### A、我学习的三个点\n-----------------\n#### 1.下载源码中源码下载：\nhttps://github.com/candycat1992/Unity_Shaders_Book\n\n#### 2.学习hello world!\n**下面gif是unity shader的hello world!**\n![Alt text](./shader2.gif)\n\n#### 3.看书照着源码学习 然后实践\n\n\n\n\n\n \n  \n   \n   \n\n\n### B、学习随便记录的笔记 \n-----------------\n#### 1.第一章\n\n\n#### 2.第二章 渲染流水线\n应用阶段->几何阶段->光栅化阶段\n应用阶段把渲染图元交给几何阶段\n\n##### 2.2CPU 和 GPU 的通信\n1. 把数据加载到显存中\n2. 设置渲染状态\n3. 调用 drallcall\n\n**1.把数据加载到显存中**\n硬盘--->内存--->显存\n顶点数据 法线方向 纹理坐标\n\n**2.设置渲染状态**\nvs ps\n顶点着色器 片元着色器\n\n**3.drawcall**\n\n##### 2.3GPU 流水线\n###### 顶点着色器\n把顶点坐标转换到齐次裁剪坐标系得到归一化的设备坐标 NDC\nopengl unity的 NDC 是-1 1\n屏幕映射 转换到屏幕坐标系\n屏幕坐标系Opengl 是左下角\n\n#### 3.第三章 Unity shader基础\n##### 3.1 创建shader的常见流程\n1. 创建一个材质\n2. 创建一个unity shader 并把它赋给上一步中创建的材质\n3. 把材质赋给要渲染的对象\n4. 在材质面板上（选中材质然后查看导航栏）调整shader的属性\n\n\n##### 3.2 shader lab\nGLSL是opengl的shader语言 Directx的shader语言是HLSL   shader lab的就是 unity shader的shader语言\n可以细看下这个章节  熟悉下语法\n\n#### 4 学习 Shader 所需的数学知识\n一些基础的知识都是大概知道 可以等到要用到的时候再去复习\n一些空间 M 模型空间 W 世界空间 V 摄像机空间 NDC 归一化空间\n\n\n#### 5 开始学习 Shader\n##### 5.2 最简单的片元着色器 顶点着色器\n###### 5.2.2 unity支持的语义：\nPOSITION，TANGENT，NORMAL，TEXCOORD0，TEXCOORD1，COLOR\n###### 5.2.3 顶点着色器和片元着色器之间的通信：\n声明一个新的结构体v2f v2f可用于定点着色器和片元着色器之间传递信息\n###### 5.3.1内置包含的文件\n在后面的学习中 总是会用到一些内置的文件\n需要include一下 类似C++的include\n\n##### 5.5 Debug技巧\n1. 把想知道的值赋值到某个颜色 通过屏幕上显示的颜色来判断一个值\n2. 还可以找到一个简单的取色脚本  ColorPicker.cs\n3. 高级的：Visual Studio Graphics Debugger\n4. Unity里面的帧调试器\n\n\n#### 6 Unity 中的基础光照\n##### 6.2 进入摄像机的光分成4个部分\n- 自发光：本身辐射量  如果没有全局光照技术 自会影响自己的辐射量\n- 高光反射：（我觉得是完全镜面反射）光源的完全镜面反射方向散射多少辐射量？？ 是镜面反射的散射？？\n- 漫反射：这个就是光源的漫反射\n- 环境光：其他所有的间接光照\n\n计算高光反射：![Alt text](./1495002356532.png)\nPhong 模型来计算高光反射部分：\n![Alt text](./1495002389507.png)\n\n\n##### 6.4 光照实现\n（1）Properties定义一个颜色值 \n（2）LightMode标签是 Pass 标签的一种 只有定义了正确的 LightMode 我们才能得到一些 Unity的内置光照变量 \nTags { \"LightMode\"=\"ForwardBase\" }\n\n（3）还是之前的 CGPROGRAM ENDCG\n\n（4）为了用到 Unity的内置变量  \n''' #include \"Lighting.cginc\"  \"'\n\n（5）逐顶点 着色器\n\n- 逐顶点漫反射：有锯齿 应该是因为处理是每个片元的顶点 所以不精细\n- 逐像素漫反射：无锯齿 但是黑面太黑 都是一个色 黑色\n- 半伯兰特模型：无锯齿 黑面有渐变\n c = c * m (0.5 (n * I) + 0.5)\n#### 7 基础纹理\n- 记住这个 ： o.uv = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n###### 7.1.2 纹理取样\nfixed3 albedo = tex2D(_MainTex, i.uv).rgb * _Color.rgb;\n\n###### 7.2 凹凸映射\n不改变顶点 改变的是绘制 \n法线纹理 normal map\n\n###### 7.2.1高度纹理\n存储的是强度值   这个通过高度来计算法线 \n颜色越浅越突 反而凹\n\n###### 7.2.2法线纹理\n\n法线的向量分量是 -1 到1 \n所以 pixel = (noamal+1)/2\nnormal = (pixel * 2) - 1\n\n这种纹理称为是模型空间的法线纹理  我恩会采用另外一种坐标空间 切线空间  我们用模型顶点的切线空间来存储法线  对于每个顶点都有一个属于自己的切线空间 这个切线空间的原点就是该顶点本身 z 轴就是顶点的法线 x 轴是顶点的切线方向\n\n我们的法线纹理 存储的是 法线在各自的切线空间的向量 大部分都是浅蓝色的原因是 0 0 1映射到0 1就是0.5 0.5 1（浅蓝色） 0 0 1就是 z 轴  大部分的法线都是跟切线空间的 z 轴同方向\n\n一种是模型空间下的法线纹理 一种是切线空间下的法线纹理\n\n模型空间存储的优点：\n- 实现简单 直观。生成简单\n- 提供平滑的边界 模型空间可以生成平滑\n\n切线空间优点：\n- 自由度高 模型空间的是绝对法线信息  应用到不同网格都有合理的效果\n- 可进行 UV 动画 我们通过移动一个纹理的 UV 坐标来实现凹凸移动的效果\n- 可压缩  只此处 xy  z 可以推倒得到 \n\n######  7.2.3 实践\n- 一种在切线空间下进行光照计算 把光照方向、视角方向变换到切线空间下 ：效率比较高  在顶点着色器可以完成 光照和视角的转换  第二种要堆法线纹理取样 需要在片元着色器中变换 我觉得应该是片元的数量大于顶点的数量所以转换需要很多 \n有时我们要在世界空间下进行一些计算 例如在 Cubemap进行环境映射 需要使用世界空间下进行一些计算 （这个 cubemap 不知讲啥）\n- 另外一种是在世界坐标空间下进行光照计算 我们要把切线空间下的法线防线转换到世界空间下：\n\n\n1. 在切线空间下计算\n思路：在片元着色器中得到纹理采样的切线空间下的法线 然后再与切线空间下的视角方向 光照方向进行计算\n注：float4 texcoord : TEXCOORD0; 传入的是float4 xy 是原因的纹理 UV zw 是法线纹理 uv\n\n######  7.2.4 unity 法线纹理类型\n法线纹理会根据平台被压缩\n使用 unpackNormal 函数取解压\n普通纹理的话 是4个通道都是不能舍弃  如果是法线纹理 那么只有ag 是需呀的 br 是不需要的 用 DXT5nm 可以升内存空间。\nCreate from Grayscale 是凹凸映射的方法 高度图 \n\n##### 7.3渐变纹理\n##### 7.4遮罩纹理\n使用其中某个（或者几个）通道做乘法 如果通道为0 可以保证表面不受该属性影响 \n\n#### 8透明效果\nunity 先渲染 Background 然后渲染 Geometry 大多数的不透明物体 前面都是开启深度测试和深度写入   之后渲染 AlphaTest 这个是透明物体  需要排序 从远到近 然后进行渲染\n\n\n##### 8.3透明度测试\n用一个阀值决定\n\n##### 8.4透明度混合\nBlend 内置的混合模式命令 \nBlend off 关闭混合\nBlend SrcFactor DstFactor\nsrccolor * SrcFactor + dstcolor * DstFactor = Target\n\n###### 8.6.1 混合等式和参数\n现在有 源颜色 S 和目标颜色 D 现在想要得到输出颜色 O 就必须使用一个等式来计算，这个就是混合等式 \n我们会用两个混合等式  一个用于混合 RGB 一个混合 A 通道 每个等式要两个因子   一共四个因子。\n\n\n\n中级篇\n####9 更复杂的光照\nForward Rendering Path、Deferred Rendering Path Vertext Lit Rendering Path\n\n顶点照明渲染路径：是对硬件配置要求最好  运算性能最高的\n\n跳过。。。\n\n#### 10 高级纹理\n\n##### 10.1立方体纹理 \n立方体纹理是环境映射的一种实现方法\n包含6张图像  采样的时候是用三维的坐标 \n\n使用立方体纹理的好处 实现简单快捷 得到的效果好  缺点是 如果当场景引入了新的物体 光源 或者物体在发生移动时 我们就需要重新生成 立方体纹理  可以反射环境  但不能反射自己  \n\n\n###### 10.1.1 天空盒子\nwindows -lighting 里面设置 skybox\n\n###### 10.1.2折射\n折射 是用光照计算函数 然后用折射函数混合反射光\n\n\n\n##### 10.2渲染纹理 \n\n\n\n##### 10.2程序纹理 \n\n\n\n#### 11 让画面动起来\n\n##### 11.1 unity shader 中的内置变量\n_Time float4 场景加载开始所经过的实际\n_SinTime 正弦值\n_CosTime 余弦值\nunity_DeltaTime \n\n##### 11.2 纹理动画\n- 序列帧动画：记住 UV 纹理坐标是左下角是原点\n- 滚动的背景：修改 UV 纹理坐标 对两张纹理取样 然后混合\n\n\n","source":"_posts/unity_study.md","raw":"---\ntitle: Unity安装->入门->工程学习->shader\ndate: 2017-07-30 12:49:39\ntags:\n---\n\n\n\n## 总体的思维导图\n通过下面一张图，大概的知道一个学习的方向和流程。对于这篇文章讲的是第一个部分，入门，初次接触unity。\n![Alt text](./1496577433020.png)\n\n<!-- more -->\n\n\n\n## 一、安装\n#### 1、安装教程（windows）\nmac就比较简单 官网下载dmg就可以安装使用了\n我用下面图中的两个文件完成安装，一个是安装文件（4.7），一个是破解，然后根据下面链接完成安装\n![Alt text](./1496577678948.png)\n\nhttp://jingyan.baidu.com/article/90895e0f959c7564ec6b0bfb.html\n\n#### 2、需要的文件（百度网盘分享）\n\nhttp://pan.baidu.com/s/1slFHeFz\n\n- 分享的文件里的东西有：\n\t- 【安装使用】：Unity 4.7.1安装文件\n\t- 【安装使用】：Unity 4.x pro Patch.exe\n\t- 【入门使用】：《unity4.x从入门到精通》\n\t- 【入门使用】：简单的工程（微信飞机游戏）：\n\t- 【进一步了解使用】：RPG游戏的简单的工程\n\t- 【shader学习使用】：《Unity Shader入门精要》\n\t- \n#### 3、安装结果\n使用a.Unity 4.7.1安装文件 b.Unity 4.x pro Patch.exe  然后用上上面的教程链接就可以完成windows unity的安装  打开如下：\n![Alt text](./1496583208861.png)\n\n\n\n## 二、入门学习：\n#### 1、开始我找了本书看《unity4.x从入门到精通》：\n《unity4.x从入门到精通》\nhttp://pan.baidu.com/s/1slFHeFz\n\n#### 2、《unity4.x从入门到精通》读书的记录：\n##### 第一章 （可跳过）\n第一章 没什么干货 可以直接跳过\n\n##### 第二章  （重点看2.1  2.2+实操一下）\n- 刚接触的unity的可以按照第二章说的去操作一下  感受一下unity的一些功能 想贪快的就看**2.1** 、**2.2**部分即可 后面的用到再查阅\n- 快捷键部分 等到基本入门了 再来看一遍 会比较受用的感觉  \n\n##### 第三章 （粗略看）\n- 第三章看下 不用纠那么细致 \n##### 第四章 （重点看+操作）\n- 第四章书讲的是怎么写代码的 看完第四章就会输出hello world\n##### 截取两张图\n![Alt text](./1490002232972.png)\n![Alt text](./1490002240157.png)\n\n\n\n##### 后面5-17章的当作工具书看\n\n12章 到16  是针对开发的介绍\n\n17章 进阶 ： 网络\n\n\n#### 3、大致的浏览了《unity4.x从入门到精通》 前四章之后带着几个疑问去分类学习：\n##### 3.1、C#代码跟unity怎么关联起来？  书中13章![Alt text](./1491552037983.png)\n###### 1、C#脚本的规则\n（1）凡事需要添加到游戏对象的C#脚本类都是需要直接或者间接的继承 MonoBehaviour 如果在unity添加脚本 unity会自动填充继承MonoBehaviour的代码  如果是自己新建一个文件 然后在unity从拖拽添加component 这样是不会成功的（后面会说unity怎么添加C#文件）\n\n（2）继承了MonoBehaviour的类 都会有Start 和 Awake函数的继承  一般使用Start和Awake来初始化  不使用构造函数的原因是unity中无法确定构造函数的顺序。这里我觉得有个原因是：unity会把所有绑定在对象身上的类实例化  然后才可以GetComponent()  例如：下面的操作如果在构造函数中做 可能PlayerAttack这个没有实例化 那么获取不到  所以把初始化工作放在Start中\n![Alt text](./1491552515808.png)\n\n（3）类名和脚本文件名相同 \n\n（4）协同函数Coroutines 返回类型必须是Ienumerator\n\n（5）C#不支持自定义命名空间\n\n###### 2、C#脚本在unity编辑器中关联对象（十三章有详细介绍）\n1、创建脚本的方法：\n![Alt text](./1491553048549.png)\n\n2、创建完之后的编辑：\n这里可以修改用MonoDevelop的编辑器 或者用Vs2012作为代码编辑\n![Alt text](./1491553152505.png)\n\n3、关联到对象去\n（3.1）添加一个gameobject \n![Alt text](./1491553612376.png)\n（3.2） 然后给gameObject添加脚本\n![Alt text](./1491553537327.png)![Alt text](./1491553548688.png)\n\n在Unity中，继承MonoBehaviour的C#脚本都被看作一个Component 游戏对象可以理解为一个容纳各种类型component的容器 游戏对象的所有component一起决定了这个对象的行为表现 这个对象被添加到scene中之后 然后点击build and run 之后这个脚本的Start函数就会被调用一起  可以在这里输出 hello world  这就算是unity的hello world\n\n\n###### 3、怎么获取别的对象以及他的component\n使用函数 GameObject.Find  null则是找不到  根据类名\n使用函数GameObject.FindWithTag\n还有在unity编辑器中拖拽\n\n查看数组的表13-6 表13-7  表13-8  表13-9 \n\n![Alt text](./1491555497064.png)\n![Alt text](./1491555396564.png)\n![Alt text](./1491555581945.png)\n![Alt text](./1491555622726.png)\n![Alt text](./1491555636221.png)\n\n\n\n## 三、工程学习：\n看了《unity4.x从入门到精通》 简单操作unity之后 我上网找几个简单的游戏demo来看下，这样我觉得会比较快上手。\n### 1、微信飞机大战\n工程下载地址：\nhttp://pan.baidu.com/s/1slFHeFz （网上找的工程）\n这个比较容易看懂   \n\n下面说明的过程：\n（1）背景移动 -->（2）敌机出生-->（3）自己的飞行\n![背景移动](./ply1.gif)==》 ![敌机出生](./ply2.gif)==》 ![自己的飞行](./ply3.gif)\n\n\n\n\n\n#### 1、初看这个工程\n只有一个场景scene\n![Alt text](./1496655674282.png)\n预制体有这些\n![Alt text](./1496663793026.png)\n脚本是这些\n![Alt text](./1496663193818.png)\n#### 2、分几个部分看\n##### 2.1、scene\n![Alt text](./1496664667730.png)\n1.里面有个 Main Camera 点击它然后看导航栏Inspector\n2.Main Camera里面有一些component组件 其中Camera 去修改size view port然后运行看下结果 \n![Alt text](./1496664752184.png)\n3.除了Main Camera 这个Scene里面还有一些飞机（hero） 背景（bg） 还一些不是UI的东西（bombManager）\n\n上面大概的了解到，在这个Scene里面拖拽了一些物件 还有一个摄像机 把这些物件投影到屏幕中，到目前为止，我们大概知道是怎么得到游戏的静态界面的，但是游戏是怎么动起来的还不知道。接下来脚本就是讲怎么动起来的。\n\n\n##### 2.2、脚本\n1. 代码入口，没有一个明确的Main函数入口  \n下面按照顺序说下（1）背景移动 （2）怎么生成敌机  （3）怎么控制自己的战机\n![Alt text](./1496665501144.png)\n（1）背景移动 \nscene里面有个object叫bg 然后再点击其中一个background查看导航栏 \n可以看到每个background都挂在了一个脚本组件 BackgroundTransform.cs  这个脚本就是控制不背景移动的\n![Alt text](./1497515757683.png)\n![Alt text](./1497515795595.png)\n\n看到BackgroundTransform这个脚本 两个背景来控制屏幕的背景交替向下移动\n```\npublic class BackgroundTransform : MonoBehaviour {\n\tpublic static float moveSpeed = 2f;\n\t\n\t// Update is called once per frame\n\tvoid Update () {\n\t\tthis.transform.Translate( Vector3.down * moveSpeed * Time.deltaTime );\n\t\tVector3 postion = this.transform.position;\n\t\tif(postion.y<=-8.52f){\n\t\t\t//有两个背景在交替滚动  如果有一个滚动到屏幕外面则改动显示\n\t\t\tthis.transform.position = new Vector3(postion.x,postion.y+8.52f*2,postion.z );\n\t\t}\n\t}\n}\n```\n\n（2）怎么生成敌机\nscene里面有个叫spawn的东西  这个spawn十个空object 里面挂了一个spawn.cs脚本组件\n![Alt text](./1497516506138.png)\n【代码如下】：\n![Alt text](./1497516724024.png)\n\n\n地机的行为就看模型上面挂的脚本组件Enemy.cs\n\n\n（3）怎么控制自己的战机\n同样的在hero这个上面挂了Hero.cs的脚本组件  然后具体就看里面的代码\n![Alt text](./1497516894694.png)\n\n\n\n\n### 2、RPG游戏\n然后再找个复杂点的游戏工程来看\n#### 1、初看工程 \n- 工程下载地址：\nhttp://pan.baidu.com/s/1slFHeFz（网上找的工程）\n- 工程的脚本目录\n![Alt text](./1491550201008.png)\n\n#### 2、工程代码查看\n**看下怎么把这个人物控制方向运动起来的**\n![Alt text](./rpg.gif)\n\n1.打开03_play这个scene 然后拖拽一个Magician模型到scene中\n先在Prefabs文件夹中找到Magician看模型有什么挂件\n- Magician挂了Character Controller这个控制组件\n这个是角色控制器 可以对角色做移动的操作 在playermove脚本里面用到\n\n- Magician还挂了PlayerDir PlayerMove  PlayerAnimation PlayerState PlayerAttack等脚本来实现模型的行为\n看下PlayerMove的update函数\n![Alt text](./1491550243585.png)\n这里判断如果距离大于0.3f则会移动\n\n\n从Magician引发的问题：\n\n##### 2.1、移动的时候有个targetPosition 这个是怎么来的？\ntargetPosition 是PlayerDir.cs这个里面的成员\nPlayerDir.cs里面会计算鼠标点击屏幕的位置发出的射线的碰撞结果 如果是地面那么修改这个玩家的朝向 \n![Alt text](./1497532344804.png)\n\n\n##### 2.2、又引发一个问题鼠标怎么会变样？\n我们看到03_play这个scene有个object叫GameSetting 这个是一个纯粹为了挂脚本用的object \n![Alt text](./1497531965474.png)\n我们看到这个CursorManager就是我们在游戏中的鼠标的管理类\n\n##### 2.3、模型怎么会动起来呢？\n打开03_play这个scene 然后拖拽一个Magician模型到scene中 然后在菜单栏window animation打开animation窗口 然后可以选择已经做好的动作 attack1 然后点击播放 现在我们知道动作可以预先做好 然后再代码中调用 我们看下代码是怎么调用的 \n![Alt text](./1497533865288.png)\nPlayerAnimation.cs这个脚本 根据一个状态去 播放动画animation.CrossFade(animName);\n\n```\n// Update is called once per frame\n\tvoid LateUpdate () {\n        if (attack.state == PlayerState.ControlWalk) {\n            if (move.state == ControlWalkState.Moving) {\n                PlayAnim(\"Run\");\n            } else if (move.state == ControlWalkState.Idle) {\n                PlayAnim(\"Idle\");\n            }\n        } else if (attack.state == PlayerState.NormalAttack) {\n            if (attack.attack_state == AttackState.Moving) {\n                PlayAnim(\"Run\");\n            }\n        }\n\t}\n\tvoid PlayAnim(string animName) {\n        animation.CrossFade(animName);\n    }\n```\n\n这个项目的运行\n![Alt text](./1491877171720.png)\n![Alt text](./1491877201762.png)\n\n之后看下怎么改改这个项目  不懂的再google 或者再去细看unity的一些用法 或则C#的用法\n\n\n\n## 四、Unity Shader学习\n\n### A、我学习的三个点\n-----------------\n#### 1.下载源码中源码下载：\nhttps://github.com/candycat1992/Unity_Shaders_Book\n\n#### 2.学习hello world!\n**下面gif是unity shader的hello world!**\n![Alt text](./shader2.gif)\n\n#### 3.看书照着源码学习 然后实践\n\n\n\n\n\n \n  \n   \n   \n\n\n### B、学习随便记录的笔记 \n-----------------\n#### 1.第一章\n\n\n#### 2.第二章 渲染流水线\n应用阶段->几何阶段->光栅化阶段\n应用阶段把渲染图元交给几何阶段\n\n##### 2.2CPU 和 GPU 的通信\n1. 把数据加载到显存中\n2. 设置渲染状态\n3. 调用 drallcall\n\n**1.把数据加载到显存中**\n硬盘--->内存--->显存\n顶点数据 法线方向 纹理坐标\n\n**2.设置渲染状态**\nvs ps\n顶点着色器 片元着色器\n\n**3.drawcall**\n\n##### 2.3GPU 流水线\n###### 顶点着色器\n把顶点坐标转换到齐次裁剪坐标系得到归一化的设备坐标 NDC\nopengl unity的 NDC 是-1 1\n屏幕映射 转换到屏幕坐标系\n屏幕坐标系Opengl 是左下角\n\n#### 3.第三章 Unity shader基础\n##### 3.1 创建shader的常见流程\n1. 创建一个材质\n2. 创建一个unity shader 并把它赋给上一步中创建的材质\n3. 把材质赋给要渲染的对象\n4. 在材质面板上（选中材质然后查看导航栏）调整shader的属性\n\n\n##### 3.2 shader lab\nGLSL是opengl的shader语言 Directx的shader语言是HLSL   shader lab的就是 unity shader的shader语言\n可以细看下这个章节  熟悉下语法\n\n#### 4 学习 Shader 所需的数学知识\n一些基础的知识都是大概知道 可以等到要用到的时候再去复习\n一些空间 M 模型空间 W 世界空间 V 摄像机空间 NDC 归一化空间\n\n\n#### 5 开始学习 Shader\n##### 5.2 最简单的片元着色器 顶点着色器\n###### 5.2.2 unity支持的语义：\nPOSITION，TANGENT，NORMAL，TEXCOORD0，TEXCOORD1，COLOR\n###### 5.2.3 顶点着色器和片元着色器之间的通信：\n声明一个新的结构体v2f v2f可用于定点着色器和片元着色器之间传递信息\n###### 5.3.1内置包含的文件\n在后面的学习中 总是会用到一些内置的文件\n需要include一下 类似C++的include\n\n##### 5.5 Debug技巧\n1. 把想知道的值赋值到某个颜色 通过屏幕上显示的颜色来判断一个值\n2. 还可以找到一个简单的取色脚本  ColorPicker.cs\n3. 高级的：Visual Studio Graphics Debugger\n4. Unity里面的帧调试器\n\n\n#### 6 Unity 中的基础光照\n##### 6.2 进入摄像机的光分成4个部分\n- 自发光：本身辐射量  如果没有全局光照技术 自会影响自己的辐射量\n- 高光反射：（我觉得是完全镜面反射）光源的完全镜面反射方向散射多少辐射量？？ 是镜面反射的散射？？\n- 漫反射：这个就是光源的漫反射\n- 环境光：其他所有的间接光照\n\n计算高光反射：![Alt text](./1495002356532.png)\nPhong 模型来计算高光反射部分：\n![Alt text](./1495002389507.png)\n\n\n##### 6.4 光照实现\n（1）Properties定义一个颜色值 \n（2）LightMode标签是 Pass 标签的一种 只有定义了正确的 LightMode 我们才能得到一些 Unity的内置光照变量 \nTags { \"LightMode\"=\"ForwardBase\" }\n\n（3）还是之前的 CGPROGRAM ENDCG\n\n（4）为了用到 Unity的内置变量  \n''' #include \"Lighting.cginc\"  \"'\n\n（5）逐顶点 着色器\n\n- 逐顶点漫反射：有锯齿 应该是因为处理是每个片元的顶点 所以不精细\n- 逐像素漫反射：无锯齿 但是黑面太黑 都是一个色 黑色\n- 半伯兰特模型：无锯齿 黑面有渐变\n c = c * m (0.5 (n * I) + 0.5)\n#### 7 基础纹理\n- 记住这个 ： o.uv = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n###### 7.1.2 纹理取样\nfixed3 albedo = tex2D(_MainTex, i.uv).rgb * _Color.rgb;\n\n###### 7.2 凹凸映射\n不改变顶点 改变的是绘制 \n法线纹理 normal map\n\n###### 7.2.1高度纹理\n存储的是强度值   这个通过高度来计算法线 \n颜色越浅越突 反而凹\n\n###### 7.2.2法线纹理\n\n法线的向量分量是 -1 到1 \n所以 pixel = (noamal+1)/2\nnormal = (pixel * 2) - 1\n\n这种纹理称为是模型空间的法线纹理  我恩会采用另外一种坐标空间 切线空间  我们用模型顶点的切线空间来存储法线  对于每个顶点都有一个属于自己的切线空间 这个切线空间的原点就是该顶点本身 z 轴就是顶点的法线 x 轴是顶点的切线方向\n\n我们的法线纹理 存储的是 法线在各自的切线空间的向量 大部分都是浅蓝色的原因是 0 0 1映射到0 1就是0.5 0.5 1（浅蓝色） 0 0 1就是 z 轴  大部分的法线都是跟切线空间的 z 轴同方向\n\n一种是模型空间下的法线纹理 一种是切线空间下的法线纹理\n\n模型空间存储的优点：\n- 实现简单 直观。生成简单\n- 提供平滑的边界 模型空间可以生成平滑\n\n切线空间优点：\n- 自由度高 模型空间的是绝对法线信息  应用到不同网格都有合理的效果\n- 可进行 UV 动画 我们通过移动一个纹理的 UV 坐标来实现凹凸移动的效果\n- 可压缩  只此处 xy  z 可以推倒得到 \n\n######  7.2.3 实践\n- 一种在切线空间下进行光照计算 把光照方向、视角方向变换到切线空间下 ：效率比较高  在顶点着色器可以完成 光照和视角的转换  第二种要堆法线纹理取样 需要在片元着色器中变换 我觉得应该是片元的数量大于顶点的数量所以转换需要很多 \n有时我们要在世界空间下进行一些计算 例如在 Cubemap进行环境映射 需要使用世界空间下进行一些计算 （这个 cubemap 不知讲啥）\n- 另外一种是在世界坐标空间下进行光照计算 我们要把切线空间下的法线防线转换到世界空间下：\n\n\n1. 在切线空间下计算\n思路：在片元着色器中得到纹理采样的切线空间下的法线 然后再与切线空间下的视角方向 光照方向进行计算\n注：float4 texcoord : TEXCOORD0; 传入的是float4 xy 是原因的纹理 UV zw 是法线纹理 uv\n\n######  7.2.4 unity 法线纹理类型\n法线纹理会根据平台被压缩\n使用 unpackNormal 函数取解压\n普通纹理的话 是4个通道都是不能舍弃  如果是法线纹理 那么只有ag 是需呀的 br 是不需要的 用 DXT5nm 可以升内存空间。\nCreate from Grayscale 是凹凸映射的方法 高度图 \n\n##### 7.3渐变纹理\n##### 7.4遮罩纹理\n使用其中某个（或者几个）通道做乘法 如果通道为0 可以保证表面不受该属性影响 \n\n#### 8透明效果\nunity 先渲染 Background 然后渲染 Geometry 大多数的不透明物体 前面都是开启深度测试和深度写入   之后渲染 AlphaTest 这个是透明物体  需要排序 从远到近 然后进行渲染\n\n\n##### 8.3透明度测试\n用一个阀值决定\n\n##### 8.4透明度混合\nBlend 内置的混合模式命令 \nBlend off 关闭混合\nBlend SrcFactor DstFactor\nsrccolor * SrcFactor + dstcolor * DstFactor = Target\n\n###### 8.6.1 混合等式和参数\n现在有 源颜色 S 和目标颜色 D 现在想要得到输出颜色 O 就必须使用一个等式来计算，这个就是混合等式 \n我们会用两个混合等式  一个用于混合 RGB 一个混合 A 通道 每个等式要两个因子   一共四个因子。\n\n\n\n中级篇\n####9 更复杂的光照\nForward Rendering Path、Deferred Rendering Path Vertext Lit Rendering Path\n\n顶点照明渲染路径：是对硬件配置要求最好  运算性能最高的\n\n跳过。。。\n\n#### 10 高级纹理\n\n##### 10.1立方体纹理 \n立方体纹理是环境映射的一种实现方法\n包含6张图像  采样的时候是用三维的坐标 \n\n使用立方体纹理的好处 实现简单快捷 得到的效果好  缺点是 如果当场景引入了新的物体 光源 或者物体在发生移动时 我们就需要重新生成 立方体纹理  可以反射环境  但不能反射自己  \n\n\n###### 10.1.1 天空盒子\nwindows -lighting 里面设置 skybox\n\n###### 10.1.2折射\n折射 是用光照计算函数 然后用折射函数混合反射光\n\n\n\n##### 10.2渲染纹理 \n\n\n\n##### 10.2程序纹理 \n\n\n\n#### 11 让画面动起来\n\n##### 11.1 unity shader 中的内置变量\n_Time float4 场景加载开始所经过的实际\n_SinTime 正弦值\n_CosTime 余弦值\nunity_DeltaTime \n\n##### 11.2 纹理动画\n- 序列帧动画：记住 UV 纹理坐标是左下角是原点\n- 滚动的背景：修改 UV 纹理坐标 对两张纹理取样 然后混合\n\n\n","slug":"unity_study","published":1,"updated":"2017-07-30T11:06:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5qmeqe30001efmhwgtyz0to","content":"<h2 id=\"总体的思维导图\"><a href=\"#总体的思维导图\" class=\"headerlink\" title=\"总体的思维导图\"></a>总体的思维导图</h2><p>通过下面一张图，大概的知道一个学习的方向和流程。对于这篇文章讲的是第一个部分，入门，初次接触unity。<br><img src=\"/2017/07/30/unity_study/1496577433020.png\" alt=\"Alt text\"></p>\n<a id=\"more\"></a>\n<h2 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h2><h4 id=\"1、安装教程（windows）\"><a href=\"#1、安装教程（windows）\" class=\"headerlink\" title=\"1、安装教程（windows）\"></a>1、安装教程（windows）</h4><p>mac就比较简单 官网下载dmg就可以安装使用了<br>我用下面图中的两个文件完成安装，一个是安装文件（4.7），一个是破解，然后根据下面链接完成安装<br><img src=\"/2017/07/30/unity_study/1496577678948.png\" alt=\"Alt text\"></p>\n<p><a href=\"http://jingyan.baidu.com/article/90895e0f959c7564ec6b0bfb.html\" target=\"_blank\" rel=\"external\">http://jingyan.baidu.com/article/90895e0f959c7564ec6b0bfb.html</a></p>\n<h4 id=\"2、需要的文件（百度网盘分享）\"><a href=\"#2、需要的文件（百度网盘分享）\" class=\"headerlink\" title=\"2、需要的文件（百度网盘分享）\"></a>2、需要的文件（百度网盘分享）</h4><p><a href=\"http://pan.baidu.com/s/1slFHeFz\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1slFHeFz</a></p>\n<ul>\n<li>分享的文件里的东西有：<ul>\n<li>【安装使用】：Unity 4.7.1安装文件</li>\n<li>【安装使用】：Unity 4.x pro Patch.exe</li>\n<li>【入门使用】：《unity4.x从入门到精通》</li>\n<li>【入门使用】：简单的工程（微信飞机游戏）：</li>\n<li>【进一步了解使用】：RPG游戏的简单的工程</li>\n<li>【shader学习使用】：《Unity Shader入门精要》</li>\n<li><h4 id=\"3、安装结果\"><a href=\"#3、安装结果\" class=\"headerlink\" title=\"3、安装结果\"></a>3、安装结果</h4>使用a.Unity 4.7.1安装文件 b.Unity 4.x pro Patch.exe  然后用上上面的教程链接就可以完成windows unity的安装  打开如下：<br><img src=\"/2017/07/30/unity_study/1496583208861.png\" alt=\"Alt text\"></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"二、入门学习：\"><a href=\"#二、入门学习：\" class=\"headerlink\" title=\"二、入门学习：\"></a>二、入门学习：</h2><h4 id=\"1、开始我找了本书看《unity4-x从入门到精通》：\"><a href=\"#1、开始我找了本书看《unity4-x从入门到精通》：\" class=\"headerlink\" title=\"1、开始我找了本书看《unity4.x从入门到精通》：\"></a>1、开始我找了本书看《unity4.x从入门到精通》：</h4><p>《unity4.x从入门到精通》<br><a href=\"http://pan.baidu.com/s/1slFHeFz\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1slFHeFz</a></p>\n<h4 id=\"2、《unity4-x从入门到精通》读书的记录：\"><a href=\"#2、《unity4-x从入门到精通》读书的记录：\" class=\"headerlink\" title=\"2、《unity4.x从入门到精通》读书的记录：\"></a>2、《unity4.x从入门到精通》读书的记录：</h4><h5 id=\"第一章-（可跳过）\"><a href=\"#第一章-（可跳过）\" class=\"headerlink\" title=\"第一章 （可跳过）\"></a>第一章 （可跳过）</h5><p>第一章 没什么干货 可以直接跳过</p>\n<h5 id=\"第二章-（重点看2-1-2-2-实操一下）\"><a href=\"#第二章-（重点看2-1-2-2-实操一下）\" class=\"headerlink\" title=\"第二章  （重点看2.1  2.2+实操一下）\"></a>第二章  （重点看2.1  2.2+实操一下）</h5><ul>\n<li>刚接触的unity的可以按照第二章说的去操作一下  感受一下unity的一些功能 想贪快的就看<strong>2.1</strong> 、<strong>2.2</strong>部分即可 后面的用到再查阅</li>\n<li>快捷键部分 等到基本入门了 再来看一遍 会比较受用的感觉  </li>\n</ul>\n<h5 id=\"第三章-（粗略看）\"><a href=\"#第三章-（粗略看）\" class=\"headerlink\" title=\"第三章 （粗略看）\"></a>第三章 （粗略看）</h5><ul>\n<li>第三章看下 不用纠那么细致 <h5 id=\"第四章-（重点看-操作）\"><a href=\"#第四章-（重点看-操作）\" class=\"headerlink\" title=\"第四章 （重点看+操作）\"></a>第四章 （重点看+操作）</h5></li>\n<li>第四章书讲的是怎么写代码的 看完第四章就会输出hello world<h5 id=\"截取两张图\"><a href=\"#截取两张图\" class=\"headerlink\" title=\"截取两张图\"></a>截取两张图</h5><img src=\"/2017/07/30/unity_study/1490002232972.png\" alt=\"Alt text\"><br><img src=\"/2017/07/30/unity_study/1490002240157.png\" alt=\"Alt text\"></li>\n</ul>\n<h5 id=\"后面5-17章的当作工具书看\"><a href=\"#后面5-17章的当作工具书看\" class=\"headerlink\" title=\"后面5-17章的当作工具书看\"></a>后面5-17章的当作工具书看</h5><p>12章 到16  是针对开发的介绍</p>\n<p>17章 进阶 ： 网络</p>\n<h4 id=\"3、大致的浏览了《unity4-x从入门到精通》-前四章之后带着几个疑问去分类学习：\"><a href=\"#3、大致的浏览了《unity4-x从入门到精通》-前四章之后带着几个疑问去分类学习：\" class=\"headerlink\" title=\"3、大致的浏览了《unity4.x从入门到精通》 前四章之后带着几个疑问去分类学习：\"></a>3、大致的浏览了《unity4.x从入门到精通》 前四章之后带着几个疑问去分类学习：</h4><h5 id=\"3-1、C-代码跟unity怎么关联起来？-书中13章\"><a href=\"#3-1、C-代码跟unity怎么关联起来？-书中13章\" class=\"headerlink\" title=\"3.1、C#代码跟unity怎么关联起来？  书中13章\"></a>3.1、C#代码跟unity怎么关联起来？  书中13章<img src=\"/2017/07/30/unity_study/1491552037983.png\" alt=\"Alt text\"></h5><h6 id=\"1、C-脚本的规则\"><a href=\"#1、C-脚本的规则\" class=\"headerlink\" title=\"1、C#脚本的规则\"></a>1、C#脚本的规则</h6><p>（1）凡事需要添加到游戏对象的C#脚本类都是需要直接或者间接的继承 MonoBehaviour 如果在unity添加脚本 unity会自动填充继承MonoBehaviour的代码  如果是自己新建一个文件 然后在unity从拖拽添加component 这样是不会成功的（后面会说unity怎么添加C#文件）</p>\n<p>（2）继承了MonoBehaviour的类 都会有Start 和 Awake函数的继承  一般使用Start和Awake来初始化  不使用构造函数的原因是unity中无法确定构造函数的顺序。这里我觉得有个原因是：unity会把所有绑定在对象身上的类实例化  然后才可以GetComponent()  例如：下面的操作如果在构造函数中做 可能PlayerAttack这个没有实例化 那么获取不到  所以把初始化工作放在Start中<br><img src=\"/2017/07/30/unity_study/1491552515808.png\" alt=\"Alt text\"></p>\n<p>（3）类名和脚本文件名相同 </p>\n<p>（4）协同函数Coroutines 返回类型必须是Ienumerator</p>\n<p>（5）C#不支持自定义命名空间</p>\n<h6 id=\"2、C-脚本在unity编辑器中关联对象（十三章有详细介绍）\"><a href=\"#2、C-脚本在unity编辑器中关联对象（十三章有详细介绍）\" class=\"headerlink\" title=\"2、C#脚本在unity编辑器中关联对象（十三章有详细介绍）\"></a>2、C#脚本在unity编辑器中关联对象（十三章有详细介绍）</h6><p>1、创建脚本的方法：<br><img src=\"/2017/07/30/unity_study/1491553048549.png\" alt=\"Alt text\"></p>\n<p>2、创建完之后的编辑：<br>这里可以修改用MonoDevelop的编辑器 或者用Vs2012作为代码编辑<br><img src=\"/2017/07/30/unity_study/1491553152505.png\" alt=\"Alt text\"></p>\n<p>3、关联到对象去<br>（3.1）添加一个gameobject<br><img src=\"/2017/07/30/unity_study/1491553612376.png\" alt=\"Alt text\"><br>（3.2） 然后给gameObject添加脚本<br><img src=\"/2017/07/30/unity_study/1491553537327.png\" alt=\"Alt text\"><img src=\"/2017/07/30/unity_study/1491553548688.png\" alt=\"Alt text\"></p>\n<p>在Unity中，继承MonoBehaviour的C#脚本都被看作一个Component 游戏对象可以理解为一个容纳各种类型component的容器 游戏对象的所有component一起决定了这个对象的行为表现 这个对象被添加到scene中之后 然后点击build and run 之后这个脚本的Start函数就会被调用一起  可以在这里输出 hello world  这就算是unity的hello world</p>\n<h6 id=\"3、怎么获取别的对象以及他的component\"><a href=\"#3、怎么获取别的对象以及他的component\" class=\"headerlink\" title=\"3、怎么获取别的对象以及他的component\"></a>3、怎么获取别的对象以及他的component</h6><p>使用函数 GameObject.Find  null则是找不到  根据类名<br>使用函数GameObject.FindWithTag<br>还有在unity编辑器中拖拽</p>\n<p>查看数组的表13-6 表13-7  表13-8  表13-9 </p>\n<p><img src=\"/2017/07/30/unity_study/1491555497064.png\" alt=\"Alt text\"><br><img src=\"/2017/07/30/unity_study/1491555396564.png\" alt=\"Alt text\"><br><img src=\"/2017/07/30/unity_study/1491555581945.png\" alt=\"Alt text\"><br><img src=\"/2017/07/30/unity_study/1491555622726.png\" alt=\"Alt text\"><br><img src=\"/2017/07/30/unity_study/1491555636221.png\" alt=\"Alt text\"></p>\n<h2 id=\"三、工程学习：\"><a href=\"#三、工程学习：\" class=\"headerlink\" title=\"三、工程学习：\"></a>三、工程学习：</h2><p>看了《unity4.x从入门到精通》 简单操作unity之后 我上网找几个简单的游戏demo来看下，这样我觉得会比较快上手。</p>\n<h3 id=\"1、微信飞机大战\"><a href=\"#1、微信飞机大战\" class=\"headerlink\" title=\"1、微信飞机大战\"></a>1、微信飞机大战</h3><p>工程下载地址：<br><a href=\"http://pan.baidu.com/s/1slFHeFz\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1slFHeFz</a> （网上找的工程）<br>这个比较容易看懂   </p>\n<p>下面说明的过程：<br>（1）背景移动 –&gt;（2）敌机出生–&gt;（3）自己的飞行<br><img src=\"/2017/07/30/unity_study/ply1.gif\" alt=\"背景移动\">==》 <img src=\"/2017/07/30/unity_study/ply2.gif\" alt=\"敌机出生\">==》 <img src=\"/2017/07/30/unity_study/ply3.gif\" alt=\"自己的飞行\"></p>\n<h4 id=\"1、初看这个工程\"><a href=\"#1、初看这个工程\" class=\"headerlink\" title=\"1、初看这个工程\"></a>1、初看这个工程</h4><p>只有一个场景scene<br><img src=\"/2017/07/30/unity_study/1496655674282.png\" alt=\"Alt text\"><br>预制体有这些<br><img src=\"/2017/07/30/unity_study/1496663793026.png\" alt=\"Alt text\"><br>脚本是这些<br><img src=\"/2017/07/30/unity_study/1496663193818.png\" alt=\"Alt text\"></p>\n<h4 id=\"2、分几个部分看\"><a href=\"#2、分几个部分看\" class=\"headerlink\" title=\"2、分几个部分看\"></a>2、分几个部分看</h4><h5 id=\"2-1、scene\"><a href=\"#2-1、scene\" class=\"headerlink\" title=\"2.1、scene\"></a>2.1、scene</h5><p><img src=\"/2017/07/30/unity_study/1496664667730.png\" alt=\"Alt text\"><br>1.里面有个 Main Camera 点击它然后看导航栏Inspector<br>2.Main Camera里面有一些component组件 其中Camera 去修改size view port然后运行看下结果<br><img src=\"/2017/07/30/unity_study/1496664752184.png\" alt=\"Alt text\"><br>3.除了Main Camera 这个Scene里面还有一些飞机（hero） 背景（bg） 还一些不是UI的东西（bombManager）</p>\n<p>上面大概的了解到，在这个Scene里面拖拽了一些物件 还有一个摄像机 把这些物件投影到屏幕中，到目前为止，我们大概知道是怎么得到游戏的静态界面的，但是游戏是怎么动起来的还不知道。接下来脚本就是讲怎么动起来的。</p>\n<h5 id=\"2-2、脚本\"><a href=\"#2-2、脚本\" class=\"headerlink\" title=\"2.2、脚本\"></a>2.2、脚本</h5><ol>\n<li>代码入口，没有一个明确的Main函数入口<br>下面按照顺序说下（1）背景移动 （2）怎么生成敌机  （3）怎么控制自己的战机<br><img src=\"/2017/07/30/unity_study/1496665501144.png\" alt=\"Alt text\"><br>（1）背景移动<br>scene里面有个object叫bg 然后再点击其中一个background查看导航栏<br>可以看到每个background都挂在了一个脚本组件 BackgroundTransform.cs  这个脚本就是控制不背景移动的<br><img src=\"/2017/07/30/unity_study/1497515757683.png\" alt=\"Alt text\"><br><img src=\"/2017/07/30/unity_study/1497515795595.png\" alt=\"Alt text\"></li>\n</ol>\n<p>看到BackgroundTransform这个脚本 两个背景来控制屏幕的背景交替向下移动<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class BackgroundTransform : MonoBehaviour &#123;</div><div class=\"line\">\tpublic static float moveSpeed = 2f;</div><div class=\"line\">\t</div><div class=\"line\">\t// Update is called once per frame</div><div class=\"line\">\tvoid Update () &#123;</div><div class=\"line\">\t\tthis.transform.Translate( Vector3.down * moveSpeed * Time.deltaTime );</div><div class=\"line\">\t\tVector3 postion = this.transform.position;</div><div class=\"line\">\t\tif(postion.y&lt;=-8.52f)&#123;</div><div class=\"line\">\t\t\t//有两个背景在交替滚动  如果有一个滚动到屏幕外面则改动显示</div><div class=\"line\">\t\t\tthis.transform.position = new Vector3(postion.x,postion.y+8.52f*2,postion.z );</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>（2）怎么生成敌机<br>scene里面有个叫spawn的东西  这个spawn十个空object 里面挂了一个spawn.cs脚本组件<br><img src=\"/2017/07/30/unity_study/1497516506138.png\" alt=\"Alt text\"><br>【代码如下】：<br><img src=\"/2017/07/30/unity_study/1497516724024.png\" alt=\"Alt text\"></p>\n<p>地机的行为就看模型上面挂的脚本组件Enemy.cs</p>\n<p>（3）怎么控制自己的战机<br>同样的在hero这个上面挂了Hero.cs的脚本组件  然后具体就看里面的代码<br><img src=\"/2017/07/30/unity_study/1497516894694.png\" alt=\"Alt text\"></p>\n<h3 id=\"2、RPG游戏\"><a href=\"#2、RPG游戏\" class=\"headerlink\" title=\"2、RPG游戏\"></a>2、RPG游戏</h3><p>然后再找个复杂点的游戏工程来看</p>\n<h4 id=\"1、初看工程\"><a href=\"#1、初看工程\" class=\"headerlink\" title=\"1、初看工程\"></a>1、初看工程</h4><ul>\n<li>工程下载地址：<br><a href=\"http://pan.baidu.com/s/1slFHeFz（网上找的工程）\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1slFHeFz（网上找的工程）</a></li>\n<li>工程的脚本目录<br><img src=\"/2017/07/30/unity_study/1491550201008.png\" alt=\"Alt text\"></li>\n</ul>\n<h4 id=\"2、工程代码查看\"><a href=\"#2、工程代码查看\" class=\"headerlink\" title=\"2、工程代码查看\"></a>2、工程代码查看</h4><p><strong>看下怎么把这个人物控制方向运动起来的</strong><br><img src=\"/2017/07/30/unity_study/rpg.gif\" alt=\"Alt text\"></p>\n<p>1.打开03_play这个scene 然后拖拽一个Magician模型到scene中<br>先在Prefabs文件夹中找到Magician看模型有什么挂件</p>\n<ul>\n<li><p>Magician挂了Character Controller这个控制组件<br>这个是角色控制器 可以对角色做移动的操作 在playermove脚本里面用到</p>\n</li>\n<li><p>Magician还挂了PlayerDir PlayerMove  PlayerAnimation PlayerState PlayerAttack等脚本来实现模型的行为<br>看下PlayerMove的update函数<br><img src=\"/2017/07/30/unity_study/1491550243585.png\" alt=\"Alt text\"><br>这里判断如果距离大于0.3f则会移动</p>\n</li>\n</ul>\n<p>从Magician引发的问题：</p>\n<h5 id=\"2-1、移动的时候有个targetPosition-这个是怎么来的？\"><a href=\"#2-1、移动的时候有个targetPosition-这个是怎么来的？\" class=\"headerlink\" title=\"2.1、移动的时候有个targetPosition 这个是怎么来的？\"></a>2.1、移动的时候有个targetPosition 这个是怎么来的？</h5><p>targetPosition 是PlayerDir.cs这个里面的成员<br>PlayerDir.cs里面会计算鼠标点击屏幕的位置发出的射线的碰撞结果 如果是地面那么修改这个玩家的朝向<br><img src=\"/2017/07/30/unity_study/1497532344804.png\" alt=\"Alt text\"></p>\n<h5 id=\"2-2、又引发一个问题鼠标怎么会变样？\"><a href=\"#2-2、又引发一个问题鼠标怎么会变样？\" class=\"headerlink\" title=\"2.2、又引发一个问题鼠标怎么会变样？\"></a>2.2、又引发一个问题鼠标怎么会变样？</h5><p>我们看到03_play这个scene有个object叫GameSetting 这个是一个纯粹为了挂脚本用的object<br><img src=\"/2017/07/30/unity_study/1497531965474.png\" alt=\"Alt text\"><br>我们看到这个CursorManager就是我们在游戏中的鼠标的管理类</p>\n<h5 id=\"2-3、模型怎么会动起来呢？\"><a href=\"#2-3、模型怎么会动起来呢？\" class=\"headerlink\" title=\"2.3、模型怎么会动起来呢？\"></a>2.3、模型怎么会动起来呢？</h5><p>打开03_play这个scene 然后拖拽一个Magician模型到scene中 然后在菜单栏window animation打开animation窗口 然后可以选择已经做好的动作 attack1 然后点击播放 现在我们知道动作可以预先做好 然后再代码中调用 我们看下代码是怎么调用的<br><img src=\"/2017/07/30/unity_study/1497533865288.png\" alt=\"Alt text\"><br>PlayerAnimation.cs这个脚本 根据一个状态去 播放动画animation.CrossFade(animName);</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Update is called once per frame</div><div class=\"line\">\tvoid LateUpdate () &#123;</div><div class=\"line\">        if (attack.state == PlayerState.ControlWalk) &#123;</div><div class=\"line\">            if (move.state == ControlWalkState.Moving) &#123;</div><div class=\"line\">                PlayAnim(&quot;Run&quot;);</div><div class=\"line\">            &#125; else if (move.state == ControlWalkState.Idle) &#123;</div><div class=\"line\">                PlayAnim(&quot;Idle&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; else if (attack.state == PlayerState.NormalAttack) &#123;</div><div class=\"line\">            if (attack.attack_state == AttackState.Moving) &#123;</div><div class=\"line\">                PlayAnim(&quot;Run&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tvoid PlayAnim(string animName) &#123;</div><div class=\"line\">        animation.CrossFade(animName);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>这个项目的运行<br><img src=\"/2017/07/30/unity_study/1491877171720.png\" alt=\"Alt text\"><br><img src=\"/2017/07/30/unity_study/1491877201762.png\" alt=\"Alt text\"></p>\n<p>之后看下怎么改改这个项目  不懂的再google 或者再去细看unity的一些用法 或则C#的用法</p>\n<h2 id=\"四、Unity-Shader学习\"><a href=\"#四、Unity-Shader学习\" class=\"headerlink\" title=\"四、Unity Shader学习\"></a>四、Unity Shader学习</h2><h3 id=\"A、我学习的三个点\"><a href=\"#A、我学习的三个点\" class=\"headerlink\" title=\"A、我学习的三个点\"></a>A、我学习的三个点</h3><hr>\n<h4 id=\"1-下载源码中源码下载：\"><a href=\"#1-下载源码中源码下载：\" class=\"headerlink\" title=\"1.下载源码中源码下载：\"></a>1.下载源码中源码下载：</h4><p><a href=\"https://github.com/candycat1992/Unity_Shaders_Book\" target=\"_blank\" rel=\"external\">https://github.com/candycat1992/Unity_Shaders_Book</a></p>\n<h4 id=\"2-学习hello-world\"><a href=\"#2-学习hello-world\" class=\"headerlink\" title=\"2.学习hello world!\"></a>2.学习hello world!</h4><p><strong>下面gif是unity shader的hello world!</strong><br><img src=\"/2017/07/30/unity_study/shader2.gif\" alt=\"Alt text\"></p>\n<h4 id=\"3-看书照着源码学习-然后实践\"><a href=\"#3-看书照着源码学习-然后实践\" class=\"headerlink\" title=\"3.看书照着源码学习 然后实践\"></a>3.看书照着源码学习 然后实践</h4><h3 id=\"B、学习随便记录的笔记\"><a href=\"#B、学习随便记录的笔记\" class=\"headerlink\" title=\"B、学习随便记录的笔记\"></a>B、学习随便记录的笔记</h3><hr>\n<h4 id=\"1-第一章\"><a href=\"#1-第一章\" class=\"headerlink\" title=\"1.第一章\"></a>1.第一章</h4><h4 id=\"2-第二章-渲染流水线\"><a href=\"#2-第二章-渲染流水线\" class=\"headerlink\" title=\"2.第二章 渲染流水线\"></a>2.第二章 渲染流水线</h4><p>应用阶段-&gt;几何阶段-&gt;光栅化阶段<br>应用阶段把渲染图元交给几何阶段</p>\n<h5 id=\"2-2CPU-和-GPU-的通信\"><a href=\"#2-2CPU-和-GPU-的通信\" class=\"headerlink\" title=\"2.2CPU 和 GPU 的通信\"></a>2.2CPU 和 GPU 的通信</h5><ol>\n<li>把数据加载到显存中</li>\n<li>设置渲染状态</li>\n<li>调用 drallcall</li>\n</ol>\n<p><strong>1.把数据加载到显存中</strong><br>硬盘—&gt;内存—&gt;显存<br>顶点数据 法线方向 纹理坐标</p>\n<p><strong>2.设置渲染状态</strong><br>vs ps<br>顶点着色器 片元着色器</p>\n<p><strong>3.drawcall</strong></p>\n<h5 id=\"2-3GPU-流水线\"><a href=\"#2-3GPU-流水线\" class=\"headerlink\" title=\"2.3GPU 流水线\"></a>2.3GPU 流水线</h5><h6 id=\"顶点着色器\"><a href=\"#顶点着色器\" class=\"headerlink\" title=\"顶点着色器\"></a>顶点着色器</h6><p>把顶点坐标转换到齐次裁剪坐标系得到归一化的设备坐标 NDC<br>opengl unity的 NDC 是-1 1<br>屏幕映射 转换到屏幕坐标系<br>屏幕坐标系Opengl 是左下角</p>\n<h4 id=\"3-第三章-Unity-shader基础\"><a href=\"#3-第三章-Unity-shader基础\" class=\"headerlink\" title=\"3.第三章 Unity shader基础\"></a>3.第三章 Unity shader基础</h4><h5 id=\"3-1-创建shader的常见流程\"><a href=\"#3-1-创建shader的常见流程\" class=\"headerlink\" title=\"3.1 创建shader的常见流程\"></a>3.1 创建shader的常见流程</h5><ol>\n<li>创建一个材质</li>\n<li>创建一个unity shader 并把它赋给上一步中创建的材质</li>\n<li>把材质赋给要渲染的对象</li>\n<li>在材质面板上（选中材质然后查看导航栏）调整shader的属性</li>\n</ol>\n<h5 id=\"3-2-shader-lab\"><a href=\"#3-2-shader-lab\" class=\"headerlink\" title=\"3.2 shader lab\"></a>3.2 shader lab</h5><p>GLSL是opengl的shader语言 Directx的shader语言是HLSL   shader lab的就是 unity shader的shader语言<br>可以细看下这个章节  熟悉下语法</p>\n<h4 id=\"4-学习-Shader-所需的数学知识\"><a href=\"#4-学习-Shader-所需的数学知识\" class=\"headerlink\" title=\"4 学习 Shader 所需的数学知识\"></a>4 学习 Shader 所需的数学知识</h4><p>一些基础的知识都是大概知道 可以等到要用到的时候再去复习<br>一些空间 M 模型空间 W 世界空间 V 摄像机空间 NDC 归一化空间</p>\n<h4 id=\"5-开始学习-Shader\"><a href=\"#5-开始学习-Shader\" class=\"headerlink\" title=\"5 开始学习 Shader\"></a>5 开始学习 Shader</h4><h5 id=\"5-2-最简单的片元着色器-顶点着色器\"><a href=\"#5-2-最简单的片元着色器-顶点着色器\" class=\"headerlink\" title=\"5.2 最简单的片元着色器 顶点着色器\"></a>5.2 最简单的片元着色器 顶点着色器</h5><h6 id=\"5-2-2-unity支持的语义：\"><a href=\"#5-2-2-unity支持的语义：\" class=\"headerlink\" title=\"5.2.2 unity支持的语义：\"></a>5.2.2 unity支持的语义：</h6><p>POSITION，TANGENT，NORMAL，TEXCOORD0，TEXCOORD1，COLOR</p>\n<h6 id=\"5-2-3-顶点着色器和片元着色器之间的通信：\"><a href=\"#5-2-3-顶点着色器和片元着色器之间的通信：\" class=\"headerlink\" title=\"5.2.3 顶点着色器和片元着色器之间的通信：\"></a>5.2.3 顶点着色器和片元着色器之间的通信：</h6><p>声明一个新的结构体v2f v2f可用于定点着色器和片元着色器之间传递信息</p>\n<h6 id=\"5-3-1内置包含的文件\"><a href=\"#5-3-1内置包含的文件\" class=\"headerlink\" title=\"5.3.1内置包含的文件\"></a>5.3.1内置包含的文件</h6><p>在后面的学习中 总是会用到一些内置的文件<br>需要include一下 类似C++的include</p>\n<h5 id=\"5-5-Debug技巧\"><a href=\"#5-5-Debug技巧\" class=\"headerlink\" title=\"5.5 Debug技巧\"></a>5.5 Debug技巧</h5><ol>\n<li>把想知道的值赋值到某个颜色 通过屏幕上显示的颜色来判断一个值</li>\n<li>还可以找到一个简单的取色脚本  ColorPicker.cs</li>\n<li>高级的：Visual Studio Graphics Debugger</li>\n<li>Unity里面的帧调试器</li>\n</ol>\n<h4 id=\"6-Unity-中的基础光照\"><a href=\"#6-Unity-中的基础光照\" class=\"headerlink\" title=\"6 Unity 中的基础光照\"></a>6 Unity 中的基础光照</h4><h5 id=\"6-2-进入摄像机的光分成4个部分\"><a href=\"#6-2-进入摄像机的光分成4个部分\" class=\"headerlink\" title=\"6.2 进入摄像机的光分成4个部分\"></a>6.2 进入摄像机的光分成4个部分</h5><ul>\n<li>自发光：本身辐射量  如果没有全局光照技术 自会影响自己的辐射量</li>\n<li>高光反射：（我觉得是完全镜面反射）光源的完全镜面反射方向散射多少辐射量？？ 是镜面反射的散射？？</li>\n<li>漫反射：这个就是光源的漫反射</li>\n<li>环境光：其他所有的间接光照</li>\n</ul>\n<p>计算高光反射：<img src=\"/2017/07/30/unity_study/1495002356532.png\" alt=\"Alt text\"><br>Phong 模型来计算高光反射部分：<br><img src=\"/2017/07/30/unity_study/1495002389507.png\" alt=\"Alt text\"></p>\n<h5 id=\"6-4-光照实现\"><a href=\"#6-4-光照实现\" class=\"headerlink\" title=\"6.4 光照实现\"></a>6.4 光照实现</h5><p>（1）Properties定义一个颜色值<br>（2）LightMode标签是 Pass 标签的一种 只有定义了正确的 LightMode 我们才能得到一些 Unity的内置光照变量<br>Tags { “LightMode”=”ForwardBase” }</p>\n<p>（3）还是之前的 CGPROGRAM ENDCG</p>\n<p>（4）为了用到 Unity的内置变量<br>‘’’ #include “Lighting.cginc”  “‘</p>\n<p>（5）逐顶点 着色器</p>\n<ul>\n<li>逐顶点漫反射：有锯齿 应该是因为处理是每个片元的顶点 所以不精细</li>\n<li>逐像素漫反射：无锯齿 但是黑面太黑 都是一个色 黑色</li>\n<li>半伯兰特模型：无锯齿 黑面有渐变<br>c = c <em> m (0.5 (n </em> I) + 0.5)<h4 id=\"7-基础纹理\"><a href=\"#7-基础纹理\" class=\"headerlink\" title=\"7 基础纹理\"></a>7 基础纹理</h4></li>\n<li>记住这个 ： o.uv = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;<h6 id=\"7-1-2-纹理取样\"><a href=\"#7-1-2-纹理取样\" class=\"headerlink\" title=\"7.1.2 纹理取样\"></a>7.1.2 纹理取样</h6>fixed3 albedo = tex2D(_MainTex, i.uv).rgb * _Color.rgb;</li>\n</ul>\n<h6 id=\"7-2-凹凸映射\"><a href=\"#7-2-凹凸映射\" class=\"headerlink\" title=\"7.2 凹凸映射\"></a>7.2 凹凸映射</h6><p>不改变顶点 改变的是绘制<br>法线纹理 normal map</p>\n<h6 id=\"7-2-1高度纹理\"><a href=\"#7-2-1高度纹理\" class=\"headerlink\" title=\"7.2.1高度纹理\"></a>7.2.1高度纹理</h6><p>存储的是强度值   这个通过高度来计算法线<br>颜色越浅越突 反而凹</p>\n<h6 id=\"7-2-2法线纹理\"><a href=\"#7-2-2法线纹理\" class=\"headerlink\" title=\"7.2.2法线纹理\"></a>7.2.2法线纹理</h6><p>法线的向量分量是 -1 到1<br>所以 pixel = (noamal+1)/2<br>normal = (pixel * 2) - 1</p>\n<p>这种纹理称为是模型空间的法线纹理  我恩会采用另外一种坐标空间 切线空间  我们用模型顶点的切线空间来存储法线  对于每个顶点都有一个属于自己的切线空间 这个切线空间的原点就是该顶点本身 z 轴就是顶点的法线 x 轴是顶点的切线方向</p>\n<p>我们的法线纹理 存储的是 法线在各自的切线空间的向量 大部分都是浅蓝色的原因是 0 0 1映射到0 1就是0.5 0.5 1（浅蓝色） 0 0 1就是 z 轴  大部分的法线都是跟切线空间的 z 轴同方向</p>\n<p>一种是模型空间下的法线纹理 一种是切线空间下的法线纹理</p>\n<p>模型空间存储的优点：</p>\n<ul>\n<li>实现简单 直观。生成简单</li>\n<li>提供平滑的边界 模型空间可以生成平滑</li>\n</ul>\n<p>切线空间优点：</p>\n<ul>\n<li>自由度高 模型空间的是绝对法线信息  应用到不同网格都有合理的效果</li>\n<li>可进行 UV 动画 我们通过移动一个纹理的 UV 坐标来实现凹凸移动的效果</li>\n<li>可压缩  只此处 xy  z 可以推倒得到 </li>\n</ul>\n<h6 id=\"7-2-3-实践\"><a href=\"#7-2-3-实践\" class=\"headerlink\" title=\"7.2.3 实践\"></a>7.2.3 实践</h6><ul>\n<li>一种在切线空间下进行光照计算 把光照方向、视角方向变换到切线空间下 ：效率比较高  在顶点着色器可以完成 光照和视角的转换  第二种要堆法线纹理取样 需要在片元着色器中变换 我觉得应该是片元的数量大于顶点的数量所以转换需要很多<br>有时我们要在世界空间下进行一些计算 例如在 Cubemap进行环境映射 需要使用世界空间下进行一些计算 （这个 cubemap 不知讲啥）</li>\n<li>另外一种是在世界坐标空间下进行光照计算 我们要把切线空间下的法线防线转换到世界空间下：</li>\n</ul>\n<ol>\n<li>在切线空间下计算<br>思路：在片元着色器中得到纹理采样的切线空间下的法线 然后再与切线空间下的视角方向 光照方向进行计算<br>注：float4 texcoord : TEXCOORD0; 传入的是float4 xy 是原因的纹理 UV zw 是法线纹理 uv</li>\n</ol>\n<h6 id=\"7-2-4-unity-法线纹理类型\"><a href=\"#7-2-4-unity-法线纹理类型\" class=\"headerlink\" title=\"7.2.4 unity 法线纹理类型\"></a>7.2.4 unity 法线纹理类型</h6><p>法线纹理会根据平台被压缩<br>使用 unpackNormal 函数取解压<br>普通纹理的话 是4个通道都是不能舍弃  如果是法线纹理 那么只有ag 是需呀的 br 是不需要的 用 DXT5nm 可以升内存空间。<br>Create from Grayscale 是凹凸映射的方法 高度图 </p>\n<h5 id=\"7-3渐变纹理\"><a href=\"#7-3渐变纹理\" class=\"headerlink\" title=\"7.3渐变纹理\"></a>7.3渐变纹理</h5><h5 id=\"7-4遮罩纹理\"><a href=\"#7-4遮罩纹理\" class=\"headerlink\" title=\"7.4遮罩纹理\"></a>7.4遮罩纹理</h5><p>使用其中某个（或者几个）通道做乘法 如果通道为0 可以保证表面不受该属性影响 </p>\n<h4 id=\"8透明效果\"><a href=\"#8透明效果\" class=\"headerlink\" title=\"8透明效果\"></a>8透明效果</h4><p>unity 先渲染 Background 然后渲染 Geometry 大多数的不透明物体 前面都是开启深度测试和深度写入   之后渲染 AlphaTest 这个是透明物体  需要排序 从远到近 然后进行渲染</p>\n<h5 id=\"8-3透明度测试\"><a href=\"#8-3透明度测试\" class=\"headerlink\" title=\"8.3透明度测试\"></a>8.3透明度测试</h5><p>用一个阀值决定</p>\n<h5 id=\"8-4透明度混合\"><a href=\"#8-4透明度混合\" class=\"headerlink\" title=\"8.4透明度混合\"></a>8.4透明度混合</h5><p>Blend 内置的混合模式命令<br>Blend off 关闭混合<br>Blend SrcFactor DstFactor<br>srccolor <em> SrcFactor + dstcolor </em> DstFactor = Target</p>\n<h6 id=\"8-6-1-混合等式和参数\"><a href=\"#8-6-1-混合等式和参数\" class=\"headerlink\" title=\"8.6.1 混合等式和参数\"></a>8.6.1 混合等式和参数</h6><p>现在有 源颜色 S 和目标颜色 D 现在想要得到输出颜色 O 就必须使用一个等式来计算，这个就是混合等式<br>我们会用两个混合等式  一个用于混合 RGB 一个混合 A 通道 每个等式要两个因子   一共四个因子。</p>\n<p>中级篇</p>\n<p>####9 更复杂的光照<br>Forward Rendering Path、Deferred Rendering Path Vertext Lit Rendering Path</p>\n<p>顶点照明渲染路径：是对硬件配置要求最好  运算性能最高的</p>\n<p>跳过。。。</p>\n<h4 id=\"10-高级纹理\"><a href=\"#10-高级纹理\" class=\"headerlink\" title=\"10 高级纹理\"></a>10 高级纹理</h4><h5 id=\"10-1立方体纹理\"><a href=\"#10-1立方体纹理\" class=\"headerlink\" title=\"10.1立方体纹理\"></a>10.1立方体纹理</h5><p>立方体纹理是环境映射的一种实现方法<br>包含6张图像  采样的时候是用三维的坐标 </p>\n<p>使用立方体纹理的好处 实现简单快捷 得到的效果好  缺点是 如果当场景引入了新的物体 光源 或者物体在发生移动时 我们就需要重新生成 立方体纹理  可以反射环境  但不能反射自己  </p>\n<h6 id=\"10-1-1-天空盒子\"><a href=\"#10-1-1-天空盒子\" class=\"headerlink\" title=\"10.1.1 天空盒子\"></a>10.1.1 天空盒子</h6><p>windows -lighting 里面设置 skybox</p>\n<h6 id=\"10-1-2折射\"><a href=\"#10-1-2折射\" class=\"headerlink\" title=\"10.1.2折射\"></a>10.1.2折射</h6><p>折射 是用光照计算函数 然后用折射函数混合反射光</p>\n<h5 id=\"10-2渲染纹理\"><a href=\"#10-2渲染纹理\" class=\"headerlink\" title=\"10.2渲染纹理\"></a>10.2渲染纹理</h5><h5 id=\"10-2程序纹理\"><a href=\"#10-2程序纹理\" class=\"headerlink\" title=\"10.2程序纹理\"></a>10.2程序纹理</h5><h4 id=\"11-让画面动起来\"><a href=\"#11-让画面动起来\" class=\"headerlink\" title=\"11 让画面动起来\"></a>11 让画面动起来</h4><h5 id=\"11-1-unity-shader-中的内置变量\"><a href=\"#11-1-unity-shader-中的内置变量\" class=\"headerlink\" title=\"11.1 unity shader 中的内置变量\"></a>11.1 unity shader 中的内置变量</h5><p>_Time float4 场景加载开始所经过的实际<br>_SinTime 正弦值<br>_CosTime 余弦值<br>unity_DeltaTime </p>\n<h5 id=\"11-2-纹理动画\"><a href=\"#11-2-纹理动画\" class=\"headerlink\" title=\"11.2 纹理动画\"></a>11.2 纹理动画</h5><ul>\n<li>序列帧动画：记住 UV 纹理坐标是左下角是原点</li>\n<li>滚动的背景：修改 UV 纹理坐标 对两张纹理取样 然后混合</li>\n</ul>\n","excerpt":"<h2 id=\"总体的思维导图\"><a href=\"#总体的思维导图\" class=\"headerlink\" title=\"总体的思维导图\"></a>总体的思维导图</h2><p>通过下面一张图，大概的知道一个学习的方向和流程。对于这篇文章讲的是第一个部分，入门，初次接触unity。<br><img src=\"/2017/07/30/unity_study/1496577433020.png\" alt=\"Alt text\"></p>","more":"<h2 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h2><h4 id=\"1、安装教程（windows）\"><a href=\"#1、安装教程（windows）\" class=\"headerlink\" title=\"1、安装教程（windows）\"></a>1、安装教程（windows）</h4><p>mac就比较简单 官网下载dmg就可以安装使用了<br>我用下面图中的两个文件完成安装，一个是安装文件（4.7），一个是破解，然后根据下面链接完成安装<br><img src=\"/2017/07/30/unity_study/1496577678948.png\" alt=\"Alt text\"></p>\n<p><a href=\"http://jingyan.baidu.com/article/90895e0f959c7564ec6b0bfb.html\">http://jingyan.baidu.com/article/90895e0f959c7564ec6b0bfb.html</a></p>\n<h4 id=\"2、需要的文件（百度网盘分享）\"><a href=\"#2、需要的文件（百度网盘分享）\" class=\"headerlink\" title=\"2、需要的文件（百度网盘分享）\"></a>2、需要的文件（百度网盘分享）</h4><p><a href=\"http://pan.baidu.com/s/1slFHeFz\">http://pan.baidu.com/s/1slFHeFz</a></p>\n<ul>\n<li>分享的文件里的东西有：<ul>\n<li>【安装使用】：Unity 4.7.1安装文件</li>\n<li>【安装使用】：Unity 4.x pro Patch.exe</li>\n<li>【入门使用】：《unity4.x从入门到精通》</li>\n<li>【入门使用】：简单的工程（微信飞机游戏）：</li>\n<li>【进一步了解使用】：RPG游戏的简单的工程</li>\n<li>【shader学习使用】：《Unity Shader入门精要》</li>\n<li><h4 id=\"3、安装结果\"><a href=\"#3、安装结果\" class=\"headerlink\" title=\"3、安装结果\"></a>3、安装结果</h4>使用a.Unity 4.7.1安装文件 b.Unity 4.x pro Patch.exe  然后用上上面的教程链接就可以完成windows unity的安装  打开如下：<br><img src=\"/2017/07/30/unity_study/1496583208861.png\" alt=\"Alt text\"></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"二、入门学习：\"><a href=\"#二、入门学习：\" class=\"headerlink\" title=\"二、入门学习：\"></a>二、入门学习：</h2><h4 id=\"1、开始我找了本书看《unity4-x从入门到精通》：\"><a href=\"#1、开始我找了本书看《unity4-x从入门到精通》：\" class=\"headerlink\" title=\"1、开始我找了本书看《unity4.x从入门到精通》：\"></a>1、开始我找了本书看《unity4.x从入门到精通》：</h4><p>《unity4.x从入门到精通》<br><a href=\"http://pan.baidu.com/s/1slFHeFz\">http://pan.baidu.com/s/1slFHeFz</a></p>\n<h4 id=\"2、《unity4-x从入门到精通》读书的记录：\"><a href=\"#2、《unity4-x从入门到精通》读书的记录：\" class=\"headerlink\" title=\"2、《unity4.x从入门到精通》读书的记录：\"></a>2、《unity4.x从入门到精通》读书的记录：</h4><h5 id=\"第一章-（可跳过）\"><a href=\"#第一章-（可跳过）\" class=\"headerlink\" title=\"第一章 （可跳过）\"></a>第一章 （可跳过）</h5><p>第一章 没什么干货 可以直接跳过</p>\n<h5 id=\"第二章-（重点看2-1-2-2-实操一下）\"><a href=\"#第二章-（重点看2-1-2-2-实操一下）\" class=\"headerlink\" title=\"第二章  （重点看2.1  2.2+实操一下）\"></a>第二章  （重点看2.1  2.2+实操一下）</h5><ul>\n<li>刚接触的unity的可以按照第二章说的去操作一下  感受一下unity的一些功能 想贪快的就看<strong>2.1</strong> 、<strong>2.2</strong>部分即可 后面的用到再查阅</li>\n<li>快捷键部分 等到基本入门了 再来看一遍 会比较受用的感觉  </li>\n</ul>\n<h5 id=\"第三章-（粗略看）\"><a href=\"#第三章-（粗略看）\" class=\"headerlink\" title=\"第三章 （粗略看）\"></a>第三章 （粗略看）</h5><ul>\n<li>第三章看下 不用纠那么细致 <h5 id=\"第四章-（重点看-操作）\"><a href=\"#第四章-（重点看-操作）\" class=\"headerlink\" title=\"第四章 （重点看+操作）\"></a>第四章 （重点看+操作）</h5></li>\n<li>第四章书讲的是怎么写代码的 看完第四章就会输出hello world<h5 id=\"截取两张图\"><a href=\"#截取两张图\" class=\"headerlink\" title=\"截取两张图\"></a>截取两张图</h5><img src=\"/2017/07/30/unity_study/1490002232972.png\" alt=\"Alt text\"><br><img src=\"/2017/07/30/unity_study/1490002240157.png\" alt=\"Alt text\"></li>\n</ul>\n<h5 id=\"后面5-17章的当作工具书看\"><a href=\"#后面5-17章的当作工具书看\" class=\"headerlink\" title=\"后面5-17章的当作工具书看\"></a>后面5-17章的当作工具书看</h5><p>12章 到16  是针对开发的介绍</p>\n<p>17章 进阶 ： 网络</p>\n<h4 id=\"3、大致的浏览了《unity4-x从入门到精通》-前四章之后带着几个疑问去分类学习：\"><a href=\"#3、大致的浏览了《unity4-x从入门到精通》-前四章之后带着几个疑问去分类学习：\" class=\"headerlink\" title=\"3、大致的浏览了《unity4.x从入门到精通》 前四章之后带着几个疑问去分类学习：\"></a>3、大致的浏览了《unity4.x从入门到精通》 前四章之后带着几个疑问去分类学习：</h4><h5 id=\"3-1、C-代码跟unity怎么关联起来？-书中13章\"><a href=\"#3-1、C-代码跟unity怎么关联起来？-书中13章\" class=\"headerlink\" title=\"3.1、C#代码跟unity怎么关联起来？  书中13章\"></a>3.1、C#代码跟unity怎么关联起来？  书中13章<img src=\"/2017/07/30/unity_study/1491552037983.png\" alt=\"Alt text\"></h5><h6 id=\"1、C-脚本的规则\"><a href=\"#1、C-脚本的规则\" class=\"headerlink\" title=\"1、C#脚本的规则\"></a>1、C#脚本的规则</h6><p>（1）凡事需要添加到游戏对象的C#脚本类都是需要直接或者间接的继承 MonoBehaviour 如果在unity添加脚本 unity会自动填充继承MonoBehaviour的代码  如果是自己新建一个文件 然后在unity从拖拽添加component 这样是不会成功的（后面会说unity怎么添加C#文件）</p>\n<p>（2）继承了MonoBehaviour的类 都会有Start 和 Awake函数的继承  一般使用Start和Awake来初始化  不使用构造函数的原因是unity中无法确定构造函数的顺序。这里我觉得有个原因是：unity会把所有绑定在对象身上的类实例化  然后才可以GetComponent()  例如：下面的操作如果在构造函数中做 可能PlayerAttack这个没有实例化 那么获取不到  所以把初始化工作放在Start中<br><img src=\"/2017/07/30/unity_study/1491552515808.png\" alt=\"Alt text\"></p>\n<p>（3）类名和脚本文件名相同 </p>\n<p>（4）协同函数Coroutines 返回类型必须是Ienumerator</p>\n<p>（5）C#不支持自定义命名空间</p>\n<h6 id=\"2、C-脚本在unity编辑器中关联对象（十三章有详细介绍）\"><a href=\"#2、C-脚本在unity编辑器中关联对象（十三章有详细介绍）\" class=\"headerlink\" title=\"2、C#脚本在unity编辑器中关联对象（十三章有详细介绍）\"></a>2、C#脚本在unity编辑器中关联对象（十三章有详细介绍）</h6><p>1、创建脚本的方法：<br><img src=\"/2017/07/30/unity_study/1491553048549.png\" alt=\"Alt text\"></p>\n<p>2、创建完之后的编辑：<br>这里可以修改用MonoDevelop的编辑器 或者用Vs2012作为代码编辑<br><img src=\"/2017/07/30/unity_study/1491553152505.png\" alt=\"Alt text\"></p>\n<p>3、关联到对象去<br>（3.1）添加一个gameobject<br><img src=\"/2017/07/30/unity_study/1491553612376.png\" alt=\"Alt text\"><br>（3.2） 然后给gameObject添加脚本<br><img src=\"/2017/07/30/unity_study/1491553537327.png\" alt=\"Alt text\"><img src=\"/2017/07/30/unity_study/1491553548688.png\" alt=\"Alt text\"></p>\n<p>在Unity中，继承MonoBehaviour的C#脚本都被看作一个Component 游戏对象可以理解为一个容纳各种类型component的容器 游戏对象的所有component一起决定了这个对象的行为表现 这个对象被添加到scene中之后 然后点击build and run 之后这个脚本的Start函数就会被调用一起  可以在这里输出 hello world  这就算是unity的hello world</p>\n<h6 id=\"3、怎么获取别的对象以及他的component\"><a href=\"#3、怎么获取别的对象以及他的component\" class=\"headerlink\" title=\"3、怎么获取别的对象以及他的component\"></a>3、怎么获取别的对象以及他的component</h6><p>使用函数 GameObject.Find  null则是找不到  根据类名<br>使用函数GameObject.FindWithTag<br>还有在unity编辑器中拖拽</p>\n<p>查看数组的表13-6 表13-7  表13-8  表13-9 </p>\n<p><img src=\"/2017/07/30/unity_study/1491555497064.png\" alt=\"Alt text\"><br><img src=\"/2017/07/30/unity_study/1491555396564.png\" alt=\"Alt text\"><br><img src=\"/2017/07/30/unity_study/1491555581945.png\" alt=\"Alt text\"><br><img src=\"/2017/07/30/unity_study/1491555622726.png\" alt=\"Alt text\"><br><img src=\"/2017/07/30/unity_study/1491555636221.png\" alt=\"Alt text\"></p>\n<h2 id=\"三、工程学习：\"><a href=\"#三、工程学习：\" class=\"headerlink\" title=\"三、工程学习：\"></a>三、工程学习：</h2><p>看了《unity4.x从入门到精通》 简单操作unity之后 我上网找几个简单的游戏demo来看下，这样我觉得会比较快上手。</p>\n<h3 id=\"1、微信飞机大战\"><a href=\"#1、微信飞机大战\" class=\"headerlink\" title=\"1、微信飞机大战\"></a>1、微信飞机大战</h3><p>工程下载地址：<br><a href=\"http://pan.baidu.com/s/1slFHeFz\">http://pan.baidu.com/s/1slFHeFz</a> （网上找的工程）<br>这个比较容易看懂   </p>\n<p>下面说明的过程：<br>（1）背景移动 –&gt;（2）敌机出生–&gt;（3）自己的飞行<br><img src=\"/2017/07/30/unity_study/ply1.gif\" alt=\"背景移动\">==》 <img src=\"/2017/07/30/unity_study/ply2.gif\" alt=\"敌机出生\">==》 <img src=\"/2017/07/30/unity_study/ply3.gif\" alt=\"自己的飞行\"></p>\n<h4 id=\"1、初看这个工程\"><a href=\"#1、初看这个工程\" class=\"headerlink\" title=\"1、初看这个工程\"></a>1、初看这个工程</h4><p>只有一个场景scene<br><img src=\"/2017/07/30/unity_study/1496655674282.png\" alt=\"Alt text\"><br>预制体有这些<br><img src=\"/2017/07/30/unity_study/1496663793026.png\" alt=\"Alt text\"><br>脚本是这些<br><img src=\"/2017/07/30/unity_study/1496663193818.png\" alt=\"Alt text\"></p>\n<h4 id=\"2、分几个部分看\"><a href=\"#2、分几个部分看\" class=\"headerlink\" title=\"2、分几个部分看\"></a>2、分几个部分看</h4><h5 id=\"2-1、scene\"><a href=\"#2-1、scene\" class=\"headerlink\" title=\"2.1、scene\"></a>2.1、scene</h5><p><img src=\"/2017/07/30/unity_study/1496664667730.png\" alt=\"Alt text\"><br>1.里面有个 Main Camera 点击它然后看导航栏Inspector<br>2.Main Camera里面有一些component组件 其中Camera 去修改size view port然后运行看下结果<br><img src=\"/2017/07/30/unity_study/1496664752184.png\" alt=\"Alt text\"><br>3.除了Main Camera 这个Scene里面还有一些飞机（hero） 背景（bg） 还一些不是UI的东西（bombManager）</p>\n<p>上面大概的了解到，在这个Scene里面拖拽了一些物件 还有一个摄像机 把这些物件投影到屏幕中，到目前为止，我们大概知道是怎么得到游戏的静态界面的，但是游戏是怎么动起来的还不知道。接下来脚本就是讲怎么动起来的。</p>\n<h5 id=\"2-2、脚本\"><a href=\"#2-2、脚本\" class=\"headerlink\" title=\"2.2、脚本\"></a>2.2、脚本</h5><ol>\n<li>代码入口，没有一个明确的Main函数入口<br>下面按照顺序说下（1）背景移动 （2）怎么生成敌机  （3）怎么控制自己的战机<br><img src=\"/2017/07/30/unity_study/1496665501144.png\" alt=\"Alt text\"><br>（1）背景移动<br>scene里面有个object叫bg 然后再点击其中一个background查看导航栏<br>可以看到每个background都挂在了一个脚本组件 BackgroundTransform.cs  这个脚本就是控制不背景移动的<br><img src=\"/2017/07/30/unity_study/1497515757683.png\" alt=\"Alt text\"><br><img src=\"/2017/07/30/unity_study/1497515795595.png\" alt=\"Alt text\"></li>\n</ol>\n<p>看到BackgroundTransform这个脚本 两个背景来控制屏幕的背景交替向下移动<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class BackgroundTransform : MonoBehaviour &#123;</div><div class=\"line\">\tpublic static float moveSpeed = 2f;</div><div class=\"line\">\t</div><div class=\"line\">\t// Update is called once per frame</div><div class=\"line\">\tvoid Update () &#123;</div><div class=\"line\">\t\tthis.transform.Translate( Vector3.down * moveSpeed * Time.deltaTime );</div><div class=\"line\">\t\tVector3 postion = this.transform.position;</div><div class=\"line\">\t\tif(postion.y&lt;=-8.52f)&#123;</div><div class=\"line\">\t\t\t//有两个背景在交替滚动  如果有一个滚动到屏幕外面则改动显示</div><div class=\"line\">\t\t\tthis.transform.position = new Vector3(postion.x,postion.y+8.52f*2,postion.z );</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>（2）怎么生成敌机<br>scene里面有个叫spawn的东西  这个spawn十个空object 里面挂了一个spawn.cs脚本组件<br><img src=\"/2017/07/30/unity_study/1497516506138.png\" alt=\"Alt text\"><br>【代码如下】：<br><img src=\"/2017/07/30/unity_study/1497516724024.png\" alt=\"Alt text\"></p>\n<p>地机的行为就看模型上面挂的脚本组件Enemy.cs</p>\n<p>（3）怎么控制自己的战机<br>同样的在hero这个上面挂了Hero.cs的脚本组件  然后具体就看里面的代码<br><img src=\"/2017/07/30/unity_study/1497516894694.png\" alt=\"Alt text\"></p>\n<h3 id=\"2、RPG游戏\"><a href=\"#2、RPG游戏\" class=\"headerlink\" title=\"2、RPG游戏\"></a>2、RPG游戏</h3><p>然后再找个复杂点的游戏工程来看</p>\n<h4 id=\"1、初看工程\"><a href=\"#1、初看工程\" class=\"headerlink\" title=\"1、初看工程\"></a>1、初看工程</h4><ul>\n<li>工程下载地址：<br><a href=\"http://pan.baidu.com/s/1slFHeFz（网上找的工程）\">http://pan.baidu.com/s/1slFHeFz（网上找的工程）</a></li>\n<li>工程的脚本目录<br><img src=\"/2017/07/30/unity_study/1491550201008.png\" alt=\"Alt text\"></li>\n</ul>\n<h4 id=\"2、工程代码查看\"><a href=\"#2、工程代码查看\" class=\"headerlink\" title=\"2、工程代码查看\"></a>2、工程代码查看</h4><p><strong>看下怎么把这个人物控制方向运动起来的</strong><br><img src=\"/2017/07/30/unity_study/rpg.gif\" alt=\"Alt text\"></p>\n<p>1.打开03_play这个scene 然后拖拽一个Magician模型到scene中<br>先在Prefabs文件夹中找到Magician看模型有什么挂件</p>\n<ul>\n<li><p>Magician挂了Character Controller这个控制组件<br>这个是角色控制器 可以对角色做移动的操作 在playermove脚本里面用到</p>\n</li>\n<li><p>Magician还挂了PlayerDir PlayerMove  PlayerAnimation PlayerState PlayerAttack等脚本来实现模型的行为<br>看下PlayerMove的update函数<br><img src=\"/2017/07/30/unity_study/1491550243585.png\" alt=\"Alt text\"><br>这里判断如果距离大于0.3f则会移动</p>\n</li>\n</ul>\n<p>从Magician引发的问题：</p>\n<h5 id=\"2-1、移动的时候有个targetPosition-这个是怎么来的？\"><a href=\"#2-1、移动的时候有个targetPosition-这个是怎么来的？\" class=\"headerlink\" title=\"2.1、移动的时候有个targetPosition 这个是怎么来的？\"></a>2.1、移动的时候有个targetPosition 这个是怎么来的？</h5><p>targetPosition 是PlayerDir.cs这个里面的成员<br>PlayerDir.cs里面会计算鼠标点击屏幕的位置发出的射线的碰撞结果 如果是地面那么修改这个玩家的朝向<br><img src=\"/2017/07/30/unity_study/1497532344804.png\" alt=\"Alt text\"></p>\n<h5 id=\"2-2、又引发一个问题鼠标怎么会变样？\"><a href=\"#2-2、又引发一个问题鼠标怎么会变样？\" class=\"headerlink\" title=\"2.2、又引发一个问题鼠标怎么会变样？\"></a>2.2、又引发一个问题鼠标怎么会变样？</h5><p>我们看到03_play这个scene有个object叫GameSetting 这个是一个纯粹为了挂脚本用的object<br><img src=\"/2017/07/30/unity_study/1497531965474.png\" alt=\"Alt text\"><br>我们看到这个CursorManager就是我们在游戏中的鼠标的管理类</p>\n<h5 id=\"2-3、模型怎么会动起来呢？\"><a href=\"#2-3、模型怎么会动起来呢？\" class=\"headerlink\" title=\"2.3、模型怎么会动起来呢？\"></a>2.3、模型怎么会动起来呢？</h5><p>打开03_play这个scene 然后拖拽一个Magician模型到scene中 然后在菜单栏window animation打开animation窗口 然后可以选择已经做好的动作 attack1 然后点击播放 现在我们知道动作可以预先做好 然后再代码中调用 我们看下代码是怎么调用的<br><img src=\"/2017/07/30/unity_study/1497533865288.png\" alt=\"Alt text\"><br>PlayerAnimation.cs这个脚本 根据一个状态去 播放动画animation.CrossFade(animName);</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Update is called once per frame</div><div class=\"line\">\tvoid LateUpdate () &#123;</div><div class=\"line\">        if (attack.state == PlayerState.ControlWalk) &#123;</div><div class=\"line\">            if (move.state == ControlWalkState.Moving) &#123;</div><div class=\"line\">                PlayAnim(&quot;Run&quot;);</div><div class=\"line\">            &#125; else if (move.state == ControlWalkState.Idle) &#123;</div><div class=\"line\">                PlayAnim(&quot;Idle&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; else if (attack.state == PlayerState.NormalAttack) &#123;</div><div class=\"line\">            if (attack.attack_state == AttackState.Moving) &#123;</div><div class=\"line\">                PlayAnim(&quot;Run&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tvoid PlayAnim(string animName) &#123;</div><div class=\"line\">        animation.CrossFade(animName);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>这个项目的运行<br><img src=\"/2017/07/30/unity_study/1491877171720.png\" alt=\"Alt text\"><br><img src=\"/2017/07/30/unity_study/1491877201762.png\" alt=\"Alt text\"></p>\n<p>之后看下怎么改改这个项目  不懂的再google 或者再去细看unity的一些用法 或则C#的用法</p>\n<h2 id=\"四、Unity-Shader学习\"><a href=\"#四、Unity-Shader学习\" class=\"headerlink\" title=\"四、Unity Shader学习\"></a>四、Unity Shader学习</h2><h3 id=\"A、我学习的三个点\"><a href=\"#A、我学习的三个点\" class=\"headerlink\" title=\"A、我学习的三个点\"></a>A、我学习的三个点</h3><hr>\n<h4 id=\"1-下载源码中源码下载：\"><a href=\"#1-下载源码中源码下载：\" class=\"headerlink\" title=\"1.下载源码中源码下载：\"></a>1.下载源码中源码下载：</h4><p><a href=\"https://github.com/candycat1992/Unity_Shaders_Book\">https://github.com/candycat1992/Unity_Shaders_Book</a></p>\n<h4 id=\"2-学习hello-world\"><a href=\"#2-学习hello-world\" class=\"headerlink\" title=\"2.学习hello world!\"></a>2.学习hello world!</h4><p><strong>下面gif是unity shader的hello world!</strong><br><img src=\"/2017/07/30/unity_study/shader2.gif\" alt=\"Alt text\"></p>\n<h4 id=\"3-看书照着源码学习-然后实践\"><a href=\"#3-看书照着源码学习-然后实践\" class=\"headerlink\" title=\"3.看书照着源码学习 然后实践\"></a>3.看书照着源码学习 然后实践</h4><h3 id=\"B、学习随便记录的笔记\"><a href=\"#B、学习随便记录的笔记\" class=\"headerlink\" title=\"B、学习随便记录的笔记\"></a>B、学习随便记录的笔记</h3><hr>\n<h4 id=\"1-第一章\"><a href=\"#1-第一章\" class=\"headerlink\" title=\"1.第一章\"></a>1.第一章</h4><h4 id=\"2-第二章-渲染流水线\"><a href=\"#2-第二章-渲染流水线\" class=\"headerlink\" title=\"2.第二章 渲染流水线\"></a>2.第二章 渲染流水线</h4><p>应用阶段-&gt;几何阶段-&gt;光栅化阶段<br>应用阶段把渲染图元交给几何阶段</p>\n<h5 id=\"2-2CPU-和-GPU-的通信\"><a href=\"#2-2CPU-和-GPU-的通信\" class=\"headerlink\" title=\"2.2CPU 和 GPU 的通信\"></a>2.2CPU 和 GPU 的通信</h5><ol>\n<li>把数据加载到显存中</li>\n<li>设置渲染状态</li>\n<li>调用 drallcall</li>\n</ol>\n<p><strong>1.把数据加载到显存中</strong><br>硬盘—&gt;内存—&gt;显存<br>顶点数据 法线方向 纹理坐标</p>\n<p><strong>2.设置渲染状态</strong><br>vs ps<br>顶点着色器 片元着色器</p>\n<p><strong>3.drawcall</strong></p>\n<h5 id=\"2-3GPU-流水线\"><a href=\"#2-3GPU-流水线\" class=\"headerlink\" title=\"2.3GPU 流水线\"></a>2.3GPU 流水线</h5><h6 id=\"顶点着色器\"><a href=\"#顶点着色器\" class=\"headerlink\" title=\"顶点着色器\"></a>顶点着色器</h6><p>把顶点坐标转换到齐次裁剪坐标系得到归一化的设备坐标 NDC<br>opengl unity的 NDC 是-1 1<br>屏幕映射 转换到屏幕坐标系<br>屏幕坐标系Opengl 是左下角</p>\n<h4 id=\"3-第三章-Unity-shader基础\"><a href=\"#3-第三章-Unity-shader基础\" class=\"headerlink\" title=\"3.第三章 Unity shader基础\"></a>3.第三章 Unity shader基础</h4><h5 id=\"3-1-创建shader的常见流程\"><a href=\"#3-1-创建shader的常见流程\" class=\"headerlink\" title=\"3.1 创建shader的常见流程\"></a>3.1 创建shader的常见流程</h5><ol>\n<li>创建一个材质</li>\n<li>创建一个unity shader 并把它赋给上一步中创建的材质</li>\n<li>把材质赋给要渲染的对象</li>\n<li>在材质面板上（选中材质然后查看导航栏）调整shader的属性</li>\n</ol>\n<h5 id=\"3-2-shader-lab\"><a href=\"#3-2-shader-lab\" class=\"headerlink\" title=\"3.2 shader lab\"></a>3.2 shader lab</h5><p>GLSL是opengl的shader语言 Directx的shader语言是HLSL   shader lab的就是 unity shader的shader语言<br>可以细看下这个章节  熟悉下语法</p>\n<h4 id=\"4-学习-Shader-所需的数学知识\"><a href=\"#4-学习-Shader-所需的数学知识\" class=\"headerlink\" title=\"4 学习 Shader 所需的数学知识\"></a>4 学习 Shader 所需的数学知识</h4><p>一些基础的知识都是大概知道 可以等到要用到的时候再去复习<br>一些空间 M 模型空间 W 世界空间 V 摄像机空间 NDC 归一化空间</p>\n<h4 id=\"5-开始学习-Shader\"><a href=\"#5-开始学习-Shader\" class=\"headerlink\" title=\"5 开始学习 Shader\"></a>5 开始学习 Shader</h4><h5 id=\"5-2-最简单的片元着色器-顶点着色器\"><a href=\"#5-2-最简单的片元着色器-顶点着色器\" class=\"headerlink\" title=\"5.2 最简单的片元着色器 顶点着色器\"></a>5.2 最简单的片元着色器 顶点着色器</h5><h6 id=\"5-2-2-unity支持的语义：\"><a href=\"#5-2-2-unity支持的语义：\" class=\"headerlink\" title=\"5.2.2 unity支持的语义：\"></a>5.2.2 unity支持的语义：</h6><p>POSITION，TANGENT，NORMAL，TEXCOORD0，TEXCOORD1，COLOR</p>\n<h6 id=\"5-2-3-顶点着色器和片元着色器之间的通信：\"><a href=\"#5-2-3-顶点着色器和片元着色器之间的通信：\" class=\"headerlink\" title=\"5.2.3 顶点着色器和片元着色器之间的通信：\"></a>5.2.3 顶点着色器和片元着色器之间的通信：</h6><p>声明一个新的结构体v2f v2f可用于定点着色器和片元着色器之间传递信息</p>\n<h6 id=\"5-3-1内置包含的文件\"><a href=\"#5-3-1内置包含的文件\" class=\"headerlink\" title=\"5.3.1内置包含的文件\"></a>5.3.1内置包含的文件</h6><p>在后面的学习中 总是会用到一些内置的文件<br>需要include一下 类似C++的include</p>\n<h5 id=\"5-5-Debug技巧\"><a href=\"#5-5-Debug技巧\" class=\"headerlink\" title=\"5.5 Debug技巧\"></a>5.5 Debug技巧</h5><ol>\n<li>把想知道的值赋值到某个颜色 通过屏幕上显示的颜色来判断一个值</li>\n<li>还可以找到一个简单的取色脚本  ColorPicker.cs</li>\n<li>高级的：Visual Studio Graphics Debugger</li>\n<li>Unity里面的帧调试器</li>\n</ol>\n<h4 id=\"6-Unity-中的基础光照\"><a href=\"#6-Unity-中的基础光照\" class=\"headerlink\" title=\"6 Unity 中的基础光照\"></a>6 Unity 中的基础光照</h4><h5 id=\"6-2-进入摄像机的光分成4个部分\"><a href=\"#6-2-进入摄像机的光分成4个部分\" class=\"headerlink\" title=\"6.2 进入摄像机的光分成4个部分\"></a>6.2 进入摄像机的光分成4个部分</h5><ul>\n<li>自发光：本身辐射量  如果没有全局光照技术 自会影响自己的辐射量</li>\n<li>高光反射：（我觉得是完全镜面反射）光源的完全镜面反射方向散射多少辐射量？？ 是镜面反射的散射？？</li>\n<li>漫反射：这个就是光源的漫反射</li>\n<li>环境光：其他所有的间接光照</li>\n</ul>\n<p>计算高光反射：<img src=\"/2017/07/30/unity_study/1495002356532.png\" alt=\"Alt text\"><br>Phong 模型来计算高光反射部分：<br><img src=\"/2017/07/30/unity_study/1495002389507.png\" alt=\"Alt text\"></p>\n<h5 id=\"6-4-光照实现\"><a href=\"#6-4-光照实现\" class=\"headerlink\" title=\"6.4 光照实现\"></a>6.4 光照实现</h5><p>（1）Properties定义一个颜色值<br>（2）LightMode标签是 Pass 标签的一种 只有定义了正确的 LightMode 我们才能得到一些 Unity的内置光照变量<br>Tags { “LightMode”=”ForwardBase” }</p>\n<p>（3）还是之前的 CGPROGRAM ENDCG</p>\n<p>（4）为了用到 Unity的内置变量<br>‘’’ #include “Lighting.cginc”  “‘</p>\n<p>（5）逐顶点 着色器</p>\n<ul>\n<li>逐顶点漫反射：有锯齿 应该是因为处理是每个片元的顶点 所以不精细</li>\n<li>逐像素漫反射：无锯齿 但是黑面太黑 都是一个色 黑色</li>\n<li>半伯兰特模型：无锯齿 黑面有渐变<br>c = c <em> m (0.5 (n </em> I) + 0.5)<h4 id=\"7-基础纹理\"><a href=\"#7-基础纹理\" class=\"headerlink\" title=\"7 基础纹理\"></a>7 基础纹理</h4></li>\n<li>记住这个 ： o.uv = v.texcoord.xy * _MainTex_ST.xy + _MainTex_ST.zw;<h6 id=\"7-1-2-纹理取样\"><a href=\"#7-1-2-纹理取样\" class=\"headerlink\" title=\"7.1.2 纹理取样\"></a>7.1.2 纹理取样</h6>fixed3 albedo = tex2D(_MainTex, i.uv).rgb * _Color.rgb;</li>\n</ul>\n<h6 id=\"7-2-凹凸映射\"><a href=\"#7-2-凹凸映射\" class=\"headerlink\" title=\"7.2 凹凸映射\"></a>7.2 凹凸映射</h6><p>不改变顶点 改变的是绘制<br>法线纹理 normal map</p>\n<h6 id=\"7-2-1高度纹理\"><a href=\"#7-2-1高度纹理\" class=\"headerlink\" title=\"7.2.1高度纹理\"></a>7.2.1高度纹理</h6><p>存储的是强度值   这个通过高度来计算法线<br>颜色越浅越突 反而凹</p>\n<h6 id=\"7-2-2法线纹理\"><a href=\"#7-2-2法线纹理\" class=\"headerlink\" title=\"7.2.2法线纹理\"></a>7.2.2法线纹理</h6><p>法线的向量分量是 -1 到1<br>所以 pixel = (noamal+1)/2<br>normal = (pixel * 2) - 1</p>\n<p>这种纹理称为是模型空间的法线纹理  我恩会采用另外一种坐标空间 切线空间  我们用模型顶点的切线空间来存储法线  对于每个顶点都有一个属于自己的切线空间 这个切线空间的原点就是该顶点本身 z 轴就是顶点的法线 x 轴是顶点的切线方向</p>\n<p>我们的法线纹理 存储的是 法线在各自的切线空间的向量 大部分都是浅蓝色的原因是 0 0 1映射到0 1就是0.5 0.5 1（浅蓝色） 0 0 1就是 z 轴  大部分的法线都是跟切线空间的 z 轴同方向</p>\n<p>一种是模型空间下的法线纹理 一种是切线空间下的法线纹理</p>\n<p>模型空间存储的优点：</p>\n<ul>\n<li>实现简单 直观。生成简单</li>\n<li>提供平滑的边界 模型空间可以生成平滑</li>\n</ul>\n<p>切线空间优点：</p>\n<ul>\n<li>自由度高 模型空间的是绝对法线信息  应用到不同网格都有合理的效果</li>\n<li>可进行 UV 动画 我们通过移动一个纹理的 UV 坐标来实现凹凸移动的效果</li>\n<li>可压缩  只此处 xy  z 可以推倒得到 </li>\n</ul>\n<h6 id=\"7-2-3-实践\"><a href=\"#7-2-3-实践\" class=\"headerlink\" title=\"7.2.3 实践\"></a>7.2.3 实践</h6><ul>\n<li>一种在切线空间下进行光照计算 把光照方向、视角方向变换到切线空间下 ：效率比较高  在顶点着色器可以完成 光照和视角的转换  第二种要堆法线纹理取样 需要在片元着色器中变换 我觉得应该是片元的数量大于顶点的数量所以转换需要很多<br>有时我们要在世界空间下进行一些计算 例如在 Cubemap进行环境映射 需要使用世界空间下进行一些计算 （这个 cubemap 不知讲啥）</li>\n<li>另外一种是在世界坐标空间下进行光照计算 我们要把切线空间下的法线防线转换到世界空间下：</li>\n</ul>\n<ol>\n<li>在切线空间下计算<br>思路：在片元着色器中得到纹理采样的切线空间下的法线 然后再与切线空间下的视角方向 光照方向进行计算<br>注：float4 texcoord : TEXCOORD0; 传入的是float4 xy 是原因的纹理 UV zw 是法线纹理 uv</li>\n</ol>\n<h6 id=\"7-2-4-unity-法线纹理类型\"><a href=\"#7-2-4-unity-法线纹理类型\" class=\"headerlink\" title=\"7.2.4 unity 法线纹理类型\"></a>7.2.4 unity 法线纹理类型</h6><p>法线纹理会根据平台被压缩<br>使用 unpackNormal 函数取解压<br>普通纹理的话 是4个通道都是不能舍弃  如果是法线纹理 那么只有ag 是需呀的 br 是不需要的 用 DXT5nm 可以升内存空间。<br>Create from Grayscale 是凹凸映射的方法 高度图 </p>\n<h5 id=\"7-3渐变纹理\"><a href=\"#7-3渐变纹理\" class=\"headerlink\" title=\"7.3渐变纹理\"></a>7.3渐变纹理</h5><h5 id=\"7-4遮罩纹理\"><a href=\"#7-4遮罩纹理\" class=\"headerlink\" title=\"7.4遮罩纹理\"></a>7.4遮罩纹理</h5><p>使用其中某个（或者几个）通道做乘法 如果通道为0 可以保证表面不受该属性影响 </p>\n<h4 id=\"8透明效果\"><a href=\"#8透明效果\" class=\"headerlink\" title=\"8透明效果\"></a>8透明效果</h4><p>unity 先渲染 Background 然后渲染 Geometry 大多数的不透明物体 前面都是开启深度测试和深度写入   之后渲染 AlphaTest 这个是透明物体  需要排序 从远到近 然后进行渲染</p>\n<h5 id=\"8-3透明度测试\"><a href=\"#8-3透明度测试\" class=\"headerlink\" title=\"8.3透明度测试\"></a>8.3透明度测试</h5><p>用一个阀值决定</p>\n<h5 id=\"8-4透明度混合\"><a href=\"#8-4透明度混合\" class=\"headerlink\" title=\"8.4透明度混合\"></a>8.4透明度混合</h5><p>Blend 内置的混合模式命令<br>Blend off 关闭混合<br>Blend SrcFactor DstFactor<br>srccolor <em> SrcFactor + dstcolor </em> DstFactor = Target</p>\n<h6 id=\"8-6-1-混合等式和参数\"><a href=\"#8-6-1-混合等式和参数\" class=\"headerlink\" title=\"8.6.1 混合等式和参数\"></a>8.6.1 混合等式和参数</h6><p>现在有 源颜色 S 和目标颜色 D 现在想要得到输出颜色 O 就必须使用一个等式来计算，这个就是混合等式<br>我们会用两个混合等式  一个用于混合 RGB 一个混合 A 通道 每个等式要两个因子   一共四个因子。</p>\n<p>中级篇</p>\n<p>####9 更复杂的光照<br>Forward Rendering Path、Deferred Rendering Path Vertext Lit Rendering Path</p>\n<p>顶点照明渲染路径：是对硬件配置要求最好  运算性能最高的</p>\n<p>跳过。。。</p>\n<h4 id=\"10-高级纹理\"><a href=\"#10-高级纹理\" class=\"headerlink\" title=\"10 高级纹理\"></a>10 高级纹理</h4><h5 id=\"10-1立方体纹理\"><a href=\"#10-1立方体纹理\" class=\"headerlink\" title=\"10.1立方体纹理\"></a>10.1立方体纹理</h5><p>立方体纹理是环境映射的一种实现方法<br>包含6张图像  采样的时候是用三维的坐标 </p>\n<p>使用立方体纹理的好处 实现简单快捷 得到的效果好  缺点是 如果当场景引入了新的物体 光源 或者物体在发生移动时 我们就需要重新生成 立方体纹理  可以反射环境  但不能反射自己  </p>\n<h6 id=\"10-1-1-天空盒子\"><a href=\"#10-1-1-天空盒子\" class=\"headerlink\" title=\"10.1.1 天空盒子\"></a>10.1.1 天空盒子</h6><p>windows -lighting 里面设置 skybox</p>\n<h6 id=\"10-1-2折射\"><a href=\"#10-1-2折射\" class=\"headerlink\" title=\"10.1.2折射\"></a>10.1.2折射</h6><p>折射 是用光照计算函数 然后用折射函数混合反射光</p>\n<h5 id=\"10-2渲染纹理\"><a href=\"#10-2渲染纹理\" class=\"headerlink\" title=\"10.2渲染纹理\"></a>10.2渲染纹理</h5><h5 id=\"10-2程序纹理\"><a href=\"#10-2程序纹理\" class=\"headerlink\" title=\"10.2程序纹理\"></a>10.2程序纹理</h5><h4 id=\"11-让画面动起来\"><a href=\"#11-让画面动起来\" class=\"headerlink\" title=\"11 让画面动起来\"></a>11 让画面动起来</h4><h5 id=\"11-1-unity-shader-中的内置变量\"><a href=\"#11-1-unity-shader-中的内置变量\" class=\"headerlink\" title=\"11.1 unity shader 中的内置变量\"></a>11.1 unity shader 中的内置变量</h5><p>_Time float4 场景加载开始所经过的实际<br>_SinTime 正弦值<br>_CosTime 余弦值<br>unity_DeltaTime </p>\n<h5 id=\"11-2-纹理动画\"><a href=\"#11-2-纹理动画\" class=\"headerlink\" title=\"11.2 纹理动画\"></a>11.2 纹理动画</h5><ul>\n<li>序列帧动画：记住 UV 纹理坐标是左下角是原点</li>\n<li>滚动的背景：修改 UV 纹理坐标 对两张纹理取样 然后混合</li>\n</ul>"},{"title":"测试文章","date":"2016-08-09T14:49:39.000Z","_content":"\n\n测试文章\n","source":"_posts/测试文章.md","raw":"---\ntitle: 测试文章\ndate: 2016-08-09 22:49:39\ntags:\n---\n\n\n测试文章\n","slug":"测试文章","published":1,"updated":"2017-07-29T10:24:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5qmeqe80002efmhtekx8425","content":"<p>测试文章</p>\n","excerpt":"","more":"<p>测试文章</p>\n"},{"title":"首次用gitpage","date":"2016-08-09T14:49:39.000Z","_content":"# 总体上感觉不错\n* 十分的方便，可以在多个平台使用 发布方便\n* 因为用markdown所以格式不用担心  而且在什么平台都可以编写  写完上传github  之后用我的macbook 更新下编写的markdown 之后在macbook上面发布即可\n* 有些格式macdown看到是可以的 但是html又不可以了\n","source":"_posts/首次使用gitpage.md","raw":"---\ntitle: 首次用gitpage\ndate: 2016-08-09 22:49:39\ntags: 随笔\n---\n# 总体上感觉不错\n* 十分的方便，可以在多个平台使用 发布方便\n* 因为用markdown所以格式不用担心  而且在什么平台都可以编写  写完上传github  之后用我的macbook 更新下编写的markdown 之后在macbook上面发布即可\n* 有些格式macdown看到是可以的 但是html又不可以了\n","slug":"首次使用gitpage","published":1,"updated":"2017-07-30T05:09:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5qmeqef0003efmh4xyjtwg9","content":"<h1 id=\"总体上感觉不错\"><a href=\"#总体上感觉不错\" class=\"headerlink\" title=\"总体上感觉不错\"></a>总体上感觉不错</h1><ul>\n<li>十分的方便，可以在多个平台使用 发布方便</li>\n<li>因为用markdown所以格式不用担心  而且在什么平台都可以编写  写完上传github  之后用我的macbook 更新下编写的markdown 之后在macbook上面发布即可</li>\n<li>有些格式macdown看到是可以的 但是html又不可以了</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"总体上感觉不错\"><a href=\"#总体上感觉不错\" class=\"headerlink\" title=\"总体上感觉不错\"></a>总体上感觉不错</h1><ul>\n<li>十分的方便，可以在多个平台使用 发布方便</li>\n<li>因为用markdown所以格式不用担心  而且在什么平台都可以编写  写完上传github  之后用我的macbook 更新下编写的markdown 之后在macbook上面发布即可</li>\n<li>有些格式macdown看到是可以的 但是html又不可以了</li>\n</ul>\n"}],"PostAsset":[{"_id":"source/_posts/unity_study/1491555636221.png","slug":"1491555636221.png","post":"cj5qmeqe30001efmhwgtyz0to","modified":1,"renderable":0},{"_id":"source/_posts/unity_study/1491555622726.png","slug":"1491555622726.png","post":"cj5qmeqe30001efmhwgtyz0to","modified":1,"renderable":0},{"_id":"source/_posts/unity_study/ply3.gif","slug":"ply3.gif","post":"cj5qmeqe30001efmhwgtyz0to","modified":1,"renderable":0},{"_id":"source/_posts/unity_study/1496583208861.png","slug":"1496583208861.png","post":"cj5qmeqe30001efmhwgtyz0to","modified":1,"renderable":0},{"_id":"source/_posts/unity_study/1491555497064.png","slug":"1491555497064.png","post":"cj5qmeqe30001efmhwgtyz0to","modified":1,"renderable":0},{"_id":"source/_posts/unity_study/1491555396564.png","slug":"1491555396564.png","post":"cj5qmeqe30001efmhwgtyz0to","modified":1,"renderable":0},{"_id":"source/_posts/unity_study/1490002232972.png","slug":"1490002232972.png","post":"cj5qmeqe30001efmhwgtyz0to","modified":1,"renderable":0},{"_id":"source/_posts/unity_study/1490002240157.png","slug":"1490002240157.png","post":"cj5qmeqe30001efmhwgtyz0to","modified":1,"renderable":0},{"_id":"source/_posts/unity_study/1491550201008.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1491550201008.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1491550243585.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1491550243585.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1491552037983.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1491552037983.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1491552515808.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1491552515808.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1491553048549.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1491553048549.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1491553152505.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1491553152505.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1491553537327.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1491553537327.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1491553548688.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1491553548688.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1491553612376.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1491553612376.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1491555581945.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1491555581945.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1491877171720.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1491877171720.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1491877201762.png","slug":"1491877201762.png","post":"cj5qmeqe30001efmhwgtyz0to","modified":1,"renderable":0},{"_id":"source/_posts/unity_study/1495002356532.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1495002356532.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1495002389507.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1495002389507.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1496577433020.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1496577433020.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1496577678948.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1496577678948.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1496655674282.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1496655674282.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1496663193818.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1496663193818.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1496663793026.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1496663793026.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1496664667730.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1496664667730.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1496664752184.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1496664752184.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1496665501144.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1496665501144.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1497515757683.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1497515757683.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1497515795595.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1497515795595.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1497516506138.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1497516506138.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1497516724024.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1497516724024.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1497516894694.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1497516894694.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1497531965474.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1497531965474.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1497532344804.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1497532344804.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/1497533865288.png","post":"cj5qmeqe30001efmhwgtyz0to","slug":"1497533865288.png","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/ply1.gif","post":"cj5qmeqe30001efmhwgtyz0to","slug":"ply1.gif","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/ply2.gif","post":"cj5qmeqe30001efmhwgtyz0to","slug":"ply2.gif","modified":1,"renderable":1},{"_id":"source/_posts/unity_study/rpg.gif","slug":"rpg.gif","post":"cj5qmeqe30001efmhwgtyz0to","modified":1,"renderable":0},{"_id":"source/_posts/unity_study/shader2.gif","slug":"shader2.gif","post":"cj5qmeqe30001efmhwgtyz0to","modified":1,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cj5qmeqef0003efmh4xyjtwg9","tag_id":"cj5qmeqeo0004efmhfb1hc22e","_id":"cj5qmeqet0005efmhmxzq4w1q"}],"Tag":[{"name":"随笔","_id":"cj5qmeqeo0004efmhfb1hc22e"}]}}